openapi: 3.0.1
info:
  title: Fiserv CheckFree Next SDK v1
  version: v1-all
  x-logo:
    url: /fiserv_logo_resize.png
paths:
  /api/v1/me/automaticTransactions:
    get:
      tags:
        - AutomaticTransactions
      x-group-name: Automatic Transactions
      x-proxy-name: List Automatic Transactions
      x-child-product-name: AutomaticTransactions
      summary: Gets a list of automatic transactions for the specified tenant/user combination Gary
      operationId: GetAutomaticTransactions
      parameters:
        - name: pageSize
          in: query
          example: "10"
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: returnInactiveAutomaticTransactions
          in: query
          schema:
            type: boolean
        - name: destinationUri
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticTransactionList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    post:
      tags:
        - AutomaticTransactions
      x-group-name: Automatic Transactions
      x-proxy-name: Create Automatic Transaction
      x-child-product-name: AutomaticTransactions
      summary: Creates a new automatic transaction using the given AutomaticTransaction object
      description: Note that there can be multiple automatic transactions associated with a single payee
      operationId: PostAutomaticTransaction
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AutomaticTransaction'
            example: {
  "fundingAccountUri": "/api/v1/me/bankAccounts/1b66a692-d01e-4a98-85e6-687127a9a564",
  "destinationUri": "/api/v1/me/payees/7c5671f9-5368-4e8c-91eb-8aacad4f8466",
  "billTransactionSchedule": {
    "amount": 19.50,
    "scheduleDaysBefore": 3,
    "transactionInitiationType": "DaysBeforeDueDate",
    "transactionType": "AmountDue",
    "transactionScheduledAlert": true,
    "transactionSentAlert": true
  }
}
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticTransaction'
            example: {
  "fundingAccountUri": "/api/v1/me/bankAccounts/1b66a692-d01e-4a98-85e6-687127a9a564",
  "destinationUri": "/api/v1/me/payees/7c5671f9-5368-4e8c-91eb-8aacad4f8466",
  "billTransactionSchedule": {
    "amount": 19.50,
    "scheduleDaysBefore": 3,
    "transactionInitiationType": "DaysBeforeDueDate",
    "transactionType": "AmountDue",
    "transactionScheduledAlert": true,
    "transactionSentAlert": true
  }
}
          text/json:
            schema:
              $ref: '#/components/schemas/AutomaticTransaction'
            example: {
  "fundingAccountUri": "/api/v1/me/bankAccounts/1b66a692-d01e-4a98-85e6-687127a9a564",
  "destinationUri": "/api/v1/me/payees/7c5671f9-5368-4e8c-91eb-8aacad4f8466",
  "billTransactionSchedule": {
    "amount": 19.50,
    "scheduleDaysBefore": 3,
    "transactionInitiationType": "DaysBeforeDueDate",
    "transactionType": "AmountDue",
    "transactionScheduledAlert": true,
    "transactionSentAlert": true
  }
}
          application/*+json:
            schema:
              $ref: '#/components/schemas/AutomaticTransaction'
            example: {
  "fundingAccountUri": "/api/v1/me/bankAccounts/1b66a692-d01e-4a98-85e6-687127a9a564",
  "destinationUri": "/api/v1/me/payees/7c5671f9-5368-4e8c-91eb-8aacad4f8466",
  "billTransactionSchedule": {
    "amount": 19.50,
    "scheduleDaysBefore": 3,
    "transactionInitiationType": "DaysBeforeDueDate",
    "transactionType": "AmountDue",
    "transactionScheduledAlert": true,
    "transactionSentAlert": true
  }
}
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsResponse'
              example: {
  "data": {
    "self": "/api/v1/me/automaticTransactions/51E2E6D2AA9345C699CDDD059EC3B49C",
    "id": "51E2E6D2AA9345C699CDDD059EC3B49C"
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsResponse'
              example: {
  "data": {},
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Error",
        "code": "string",
        "field": "string",
        "fieldPath": "string",
        "listItemId": "string",
        "description": "string"
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsResponse'
              example: {
  "data": {},
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Error",
        "code": "string",
        "field": "string",
        "fieldPath": "string",
        "listItemId": "string",
        "description": "string"
      }
    ]
  }
}
  '/api/v1/me/automaticTransactions/{automaticTransactionId}':
    get:
      tags:
        - AutomaticTransactions
      x-group-name: Automatic Transactions
      x-proxy-name: Get Automatic Transaction 
      x-child-product-name: AutomaticTransactions
      summary: Gets an automatic transaction given an automatic transaction ID
      operationId: GetAutomaticTransactions
      parameters:
        - name: automaticTransactionId
          in: path
          description: Automatic transaction model identifier
          required: true
          schema:
            type: string
            description: Automatic transaction model identifier
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticTransactionOutputDetail'
              example: {
  "modifiableFields": [
    "amount",
    "endTransactionAmount",
    "fundingAccountUri",
    "initialTransactionAmount",
    "memo",
    "scheduleDaysBefore",
    "freqeuency",
    "initiationDate",
    "transactionScheduledAlert",
    "maxTransactionCount",
    "endDate",
    "transactionSentAlert",
    "recurringExpireScheduleAlert"
  ],
  "id": "5E31EC156F45467B8DFCE0018D1150E0",
  "self": "/api/v1/me/automaticTransactions/40b5aa64-ec9e-4ab3-87ad-a67dd840b58d",
  "status": "Active",
  "fundingAccountUri": "/api/v1/me/bankAccounts/5E31EC156F45467B8DFCE0018D1150E0",
  "destinationUri": "/api/v1/me/payees/9ea47419-e91f-4eeb-b9f3-95e314e9b308",
  "recurringTransactionSchedule": {
    "amount": 25.0,
    "frequency": "Monthly",
    "initiationDate": "2022-01-27",
    "maximumTransactionCount": 24,
    "remainingTransactionCount": 24,
    "memo": "I sent you money",
    "transactionScheduledAlert": true,
    "transactionSentAlert": true,
    "recurringScheduleExpireAlert": true,
    "duration": "XNumberOfPayments"
  }
}
        '400':
          description: Bad Request
        '403':
          description: Forbidden
    delete:
      tags:
        - AutomaticTransactions
      x-group-name: Automatic Transactions
      x-proxy-name: Delete Automatic Transaction  
      x-child-product-name: AutomaticTransactions
      summary: Deletes an existing automatic transaction model that the user owns.
      description: "Deletes a user's automatic transaction model.\r\nThe operation takes an optional query parameter to determine whether or not spawned, pending transactions should be canceled.\r\nIf the query parameter is not submitted, it defaults to false, and no transactions are canceled."
      operationId: DeleteAutomaticTransaction
      parameters:
        - name: automaticTransactionId
          in: path
          description: Automatic transaction model identifier
          required: true
          schema:
            type: string
            description: Automatic transaction model identifier
            nullable: true
        - name: cancelPendingTransactions
          in: query
          description: "Flag to cancel pending transactions.\r\n            The option to cancel pending transactions only applies to AutomaticTransactions that are of the type RecurringTransactionSchedule. \r\n            This does not apply to BillTransactionSchedule."
          schema:
            type: boolean
            description: "Flag to cancel pending transactions.\r\n            The option to cancel pending transactions only applies to AutomaticTransactions that are of the type RecurringTransactionSchedule. \r\n            This does not apply to BillTransactionSchedule."
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTransactionsListIpsResponse'
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    patch:
      tags:
        - AutomaticTransactions
      x-group-name: Automatic Transactions
      x-proxy-name: Update Automatic Transaction  
      x-child-product-name: AutomaticTransactions
      summary: "The Automatic Transactions Patch API enables changes to be done to an automatic transaction that has been already set up.\r\nOnly the Delta changes are send in the request."
      operationId: PatchAutomaticTransaction
      parameters:
        - name: automaticTransactionId
          in: path
          description: AutomaticTransactionId for AutomaticTransaction.
          required: true
          schema:
            type: string
            description: AutomaticTransactionId for AutomaticTransaction.
            nullable: true
      requestBody:
        description: The modified AutomaticTransaction information.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AutomaticTransactionPatch'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticTransactionPatch'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/AutomaticTransactionPatch'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/AutomaticTransactionPatch'
            example: "112233445566"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsListIpsResponse'
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/financialInstitution:
    get:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Get Financial Institution
      x-child-product-name: BankAccounts
      summary: Get Financial Institution Name when the routing number is sent.
      operationId: GetFinancialInstitutionName
      parameters:
        - name: routingTransitNumber
          in: query
          required: true
          schema:
            pattern: '^[0-9]{9}$'
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialInstitutionModelIpsResponse'
              example: {
  "data": {
    "financialInstitutionName": "First Nation Wide Bank"
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultTypeIpsResponse'
        '404':
          description: Not Found
  /api/v1/me/bankAccounts:
    get:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: List Bank Accounts
      x-child-product-name: BankAccounts
      summary: Retrieves bank accounts list.
      operationId: GetBankAccountsAsync
      parameters:
        - name: returnInactiveBankAccounts
          in: query
          description: "If true all bank accounts will be returned.\r\n            If false only active accounts will be returned. \r\n            If not present then by default only active accounts will be returned."
          schema:
            type: boolean
            description: "If true all bank accounts will be returned.\r\n            If false only active accounts will be returned. \r\n            If not present then by default only active accounts will be returned."
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountGetModelListIpsResponse'
              example: {
  "data": [
    {
      "self": "/api/v1/me/bankAccounts/faa13b6d-4815-4ba9-b17b-45d72f4a4a53",
      "id": "faa13b6d-4815-4ba9-b17b-45d72f4a4a53",
      "modifiableFields": [
        "nickname",
        "businessName",
        "primaryAccountOwner",
        "secondaryAccountOwner",
        "checkPrintAddress",
        "checkPrintAddressInternational"
      ],
      "accountType": "Checking",
      "maskedAccountNumber": "**********1212",
      "nickname": "Sam-T",
      "balanceUri": "/api/v1/me/bankAccounts/faa13b6d-4815-4ba9-b17b-45d72f4a4a53/balance",
      "isPreferred": true,
      "unmaskedAccountNumberUri": "/api/v1/me/bankAccounts/faa13b6d-4815-4ba9-b17b-45d72f4a4a53/accountnumber",
      "routingTransitNumber": "031000859",
      "isBusiness": true,
      "businessName": "Biller AT&T",
      "primaryAccountOwner": "John",
      "secondaryAccountOwner": "James Bond",
      "confirmationStatus": "Confirmed",
      "accountStatus": "Active",
      "checkPrintAddress": {
        "address1": "6000 Perimeter Drive",
        "address2": "Mailbox 1034",
        "city": "Dublin",
        "state": "OH",
        "zipCode": "43017"
      },
      "checkPrintAddressInternational": {
        "address1": "1010 EASY ST",
        "address2": "Mailbox 456",
        "city": "OTTAWA",
        "countryCode": "CA",
        "postalCode": "K1A 0B1",
        "provinceName": "ONTARIO",
        "state": "NW"
      }
    },
    {
      "self": "/api/v1/me/bankAccounts/78856855-f9ac-44bb-b15f-037ca67c246f",
      "id": "78856855-f9ac-44bb-b15f-037ca67c246f",
      "modifiableFields": [
        "nickname",
        "isPreferred",
        "primaryAccountOwner",
        "secondaryAccountOwner",
        "checkPrintAddress",
        "checkPrintAddressInternational"
      ],
      "accountType": "Savings",
      "maskedAccountNumber": "**********1242",
      "nickname": "AT",
      "balanceUri": "/api/v1/me/bankAccounts/78856855-f9ac-44bb-b15f-037ca67c246f/balance",
      "isPreferred": false,
      "unmaskedAccountNumberUri": "/api/v1/me/bankAccounts/78856855-f9ac-44bb-b15f-037ca67c246f/accountnumber",
      "routingTransitNumber": "061213027",
      "isBusiness": false,
      "primaryAccountOwner": "Jane",
      "secondaryAccountOwner": "Kennedy",
      "confirmationStatus": "Confirmed",
      "accountStatus": "Active",
      "checkPrintAddress": {
        "address1": "6000 Perimeter Drive",
        "address2": "Mailbox 1034",
        "city": "Dublin",
        "state": "OH",
        "zipCode": "43017"
      },
      "checkPrintAddressInternational": {
        "address1": "1010 EASY ST",
        "address2": "Mailbox 456",
        "city": "OTTAWA",
        "countryCode": "CA",
        "postalCode": "K1A 0B1",
        "provinceName": "ONTARIO",
        "state": "NW"
      }
    }
  ],
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    post:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Add Bank Account
      x-child-product-name: BankAccounts
      summary: Add a untrusted bank account as a funding account.
      operationId: PostUntrustedBankAccount
      requestBody:
        description: Funding account added by the user
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankAccountPostRequest'
            example: {
  "routingTransitNumber": "061213027",
  "accountNumber": "569992340304304",
  "accountType": "Savings",
  "nickname": "Sam",
  "startingCheckNumber": 1258,
  "isPreferred": true,
  "isBusiness": true,
  "businessName": "Biller AT&T",
  "primaryAccountOwner": "Jane",
  "secondaryAccountOwner": "Kennedy",
  "checkPrintAddress": {
    "address1": "6883 Made Up St.",
    "address2": "Apt 354",
    "city": "Athens",
    "state": "GA",
    "zipCode": "30306"
  },
  "checkPrintAddressInternational": {
    "address1": "1010 EASY ST",
    "address2": "Mailbox 456",
    "city": "OTTAWA",
    "countryCode": "CA",
    "postalCode": "K1A 0B1",
    "provinceName": "ONTARIO",
    "state": "NW"
  },
  "bankingOptions": {
    "isDownloadTransactionsEnabled": true,
    "isSourceTransferAccount": true,
    "isDestinationTransferAccount": true
  }
}
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountPostRequest'
            example: {
  "routingTransitNumber": "061213027",
  "accountNumber": "569992340304304",
  "accountType": "Savings",
  "nickname": "Sam",
  "startingCheckNumber": 1258,
  "isPreferred": true,
  "isBusiness": true,
  "businessName": "Biller AT&T",
  "primaryAccountOwner": "Jane",
  "secondaryAccountOwner": "Kennedy",
  "checkPrintAddress": {
    "address1": "6883 Made Up St.",
    "address2": "Apt 354",
    "city": "Athens",
    "state": "GA",
    "zipCode": "30306"
  },
  "checkPrintAddressInternational": {
    "address1": "1010 EASY ST",
    "address2": "Mailbox 456",
    "city": "OTTAWA",
    "countryCode": "CA",
    "postalCode": "K1A 0B1",
    "provinceName": "ONTARIO",
    "state": "NW"
  },
  "bankingOptions": {
    "isDownloadTransactionsEnabled": true,
    "isSourceTransferAccount": true,
    "isDestinationTransferAccount": true
  }
}
          text/json:
            schema:
              $ref: '#/components/schemas/BankAccountPostRequest'
            example: {
  "routingTransitNumber": "061213027",
  "accountNumber": "569992340304304",
  "accountType": "Savings",
  "nickname": "Sam",
  "startingCheckNumber": 1258,
  "isPreferred": true,
  "isBusiness": true,
  "businessName": "Biller AT&T",
  "primaryAccountOwner": "Jane",
  "secondaryAccountOwner": "Kennedy",
  "checkPrintAddress": {
    "address1": "6883 Made Up St.",
    "address2": "Apt 354",
    "city": "Athens",
    "state": "GA",
    "zipCode": "30306"
  },
  "checkPrintAddressInternational": {
    "address1": "1010 EASY ST",
    "address2": "Mailbox 456",
    "city": "OTTAWA",
    "countryCode": "CA",
    "postalCode": "K1A 0B1",
    "provinceName": "ONTARIO",
    "state": "NW"
  },
  "bankingOptions": {
    "isDownloadTransactionsEnabled": true,
    "isSourceTransferAccount": true,
    "isDestinationTransferAccount": true
  }
}
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankAccountPostRequest'
            example: {
  "routingTransitNumber": "061213027",
  "accountNumber": "569992340304304",
  "accountType": "Savings",
  "nickname": "Sam",
  "startingCheckNumber": 1258,
  "isPreferred": true,
  "isBusiness": true,
  "businessName": "Biller AT&T",
  "primaryAccountOwner": "Jane",
  "secondaryAccountOwner": "Kennedy",
  "checkPrintAddress": {
    "address1": "6883 Made Up St.",
    "address2": "Apt 354",
    "city": "Athens",
    "state": "GA",
    "zipCode": "30306"
  },
  "checkPrintAddressInternational": {
    "address1": "1010 EASY ST",
    "address2": "Mailbox 456",
    "city": "OTTAWA",
    "countryCode": "CA",
    "postalCode": "K1A 0B1",
    "provinceName": "ONTARIO",
    "state": "NW"
  },
  "bankingOptions": {
    "isDownloadTransactionsEnabled": true,
    "isSourceTransferAccount": true,
    "isDestinationTransferAccount": true
  }
}
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsResponse'
              example: {
  "data": {
    "self": "/api/v1/me/users/testuser/bankAccounts/9cb67d48-de7a-4b1a-bc66-8f3c09ebe64b",
    "id": "9cb67d48-de7a-4b1a-bc66-8f3c09ebe64b"
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/users/{userId}/bankAccounts':
    get:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: List User Bank Accounts
      x-child-product-name: BankAccounts
      summary: Returns all bank accounts for a given tenant/user combination
      operationId: GetBankAccountsByTenantsAsync
      parameters:
        - name: userId
          in: path
          description: Challenger User Id
          required: true
          schema:
            type: string
            description: Challenger User Id
            nullable: true
        - name: returnInactiveBankAccounts
          in: query
          description: "If true all bank accounts will be returned.\r\n            If false only active accounts will be returned. \r\n            If not present then by default only active accounts will be returned."
          schema:
            type: boolean
            description: "If true all bank accounts will be returned.\r\n            If false only active accounts will be returned. \r\n            If not present then by default only active accounts will be returned."
        - name: idType
          in: query
          schema:
            $ref: '#/components/schemas/UserIdType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountGetModelListIpsResponse'
              example: {
  "data": [
    {
      "self": "/api/v1/tenants/25725/users/1/bankAccounts/b23c244e-8488-42d1-8cf2-3aa73575bf9b",
      "id": "b23c244e-8488-42d1-8cf2-3aa73575bf9b",
      "modifiableFields": [
        "nickname",
        "businessName",
        "primaryAccountOwner",
        "secondaryAccountOwner",
        "checkPrintAddress",
        "checkPrintAddressInternational"
      ],
      "accountType": "Checking",
      "maskedAccountNumber": "**********1212",
      "nickname": "Sam-T",
      "balanceUri": "/api/v1/me/bankAccounts/b23c244e-8488-42d1-8cf2-3aa73575bf9b/balance",
      "isPreferred": true,
      "unmaskedAccountNumberUri": "/api/v1/me/bankAccounts/b23c244e-8488-42d1-8cf2-3aa73575bf9b/accountnumber",
      "routingTransitNumber": "031000859",
      "isBusiness": true,
      "businessName": "Biller AT&T",
      "primaryAccountOwner": "John",
      "secondaryAccountOwner": "James Bond",
      "confirmationStatus": "Pending",
      "accountStatus": "Pending",
      "checkPrintAddress": {
        "address1": "6000 Perimeter Drive",
        "address2": "Mailbox 1034",
        "city": "Dublin",
        "state": "OH",
        "zipCode": "43017"
      },
      "checkPrintAddressInternational": {
        "address1": "1010 EASY ST",
        "address2": "Mailbox 456",
        "city": "OTTAWA",
        "countryCode": "CA",
        "postalCode": "K1A 0B1",
        "provinceName": "ONTARIO",
        "state": "NW"
      }
    },
    {
      "self": "/api/v1/tenants/25725/users/1/bankAccounts/46abdb10-d02e-4410-ad29-fb4d3b1c7dad",
      "id": "46abdb10-d02e-4410-ad29-fb4d3b1c7dad",
      "modifiableFields": [
        "nickname",
        "isPreferred",
        "primaryAccountOwner",
        "secondaryAccountOwner",
        "checkPrintAddress",
        "checkPrintAddressInternational"
      ],
      "accountType": "Savings",
      "maskedAccountNumber": "**********1242",
      "nickname": "AT",
      "balanceUri": "/api/v1/me/bankAccounts/46abdb10-d02e-4410-ad29-fb4d3b1c7dad/balance",
      "isPreferred": false,
      "unmaskedAccountNumberUri": "/api/v1/me/bankAccounts/46abdb10-d02e-4410-ad29-fb4d3b1c7dad/accountnumber",
      "routingTransitNumber": "061213027",
      "isBusiness": false,
      "primaryAccountOwner": "Jane",
      "secondaryAccountOwner": "Kennedy",
      "confirmationStatus": "Pending",
      "accountStatus": "Pending",
      "checkPrintAddress": {
        "address1": "6000 Perimeter Drive",
        "address2": "Mailbox 1034",
        "city": "Dublin",
        "state": "OH",
        "zipCode": "43017"
      },
      "checkPrintAddressInternational": {
        "address1": "1010 EASY ST",
        "address2": "Mailbox 456",
        "city": "OTTAWA",
        "countryCode": "CA",
        "postalCode": "K1A 0B1",
        "provinceName": "ONTARIO",
        "state": "NW"
      }
    }
  ],
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    post:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Add User Bank Account
      x-child-product-name: BankAccounts
      summary: Add a trusted bank account as a funding account for a specific user
      operationId: PostBankAccount
      parameters:
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
        - name: idType
          in: query
          description: ''
          schema:
            $ref: '#/components/schemas/UserIdType'
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankAccountPostRequest'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountPostRequest'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/BankAccountPostRequest'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankAccountPostRequest'
            example: "112233445566"
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsResponse'
              example: {
  "data": {
    "self": "/api/v1/me/users/testuser/bankAccounts/2a75fac3-39b3-4ca1-bc69-483c25033fa7",
    "id": "2a75fac3-39b3-4ca1-bc69-483c25033fa7"
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/bankAccounts/{bankAccountCommonId}':
    get:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Get Bank Account
      x-child-product-name: BankAccounts
      summary: Retrieves the bank account information given a bankAccountId.
      operationId: GetBankAccountAsync
      parameters:
        - name: bankAccountCommonId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountGetModelIEnumerableIpsResponse'
              example: {
  "data": {
    "self": "/api/v1/me/bankAccounts/f45da2f55efa402e88a14259438adf00",
    "id": "f45da2f55efa402e88a14259438adf00",
    "modifiableFields": [
      "nickname",
      "businessName",
      "primaryAccountOwner",
      "secondaryAccountOwner",
      "checkPrintAddress",
      "checkPrintAddressInternational"
    ],
    "accountType": "Checking",
    "maskedAccountNumber": "********1234",
    "nickname": "A bank account",
    "balanceUri": "/api/v1/me/bankAccounts/f45da2f55efa402e88a14259438adf00/balance",
    "isPreferred": true,
    "unmaskedAccountNumberUri": "/api/v1/me/bankAccounts/f45da2f55efa402e88a14259438adf00/accountnumber",
    "routingTransitNumber": "031000859",
    "isBusiness": true,
    "businessName": "Biller AT&T",
    "primaryAccountOwner": "John",
    "secondaryAccountOwner": "James Bond",
    "confirmationStatus": "Pending",
    "accountStatus": "Pending",
    "checkPrintAddress": {
      "address1": "6000 Perimeter Drive",
      "address2": "Mailbox 1034",
      "city": "Dublin",
      "state": "OH",
      "zipCode": "43017"
    },
    "checkPrintAddressInternational": {
      "address1": "1010 EASY ST",
      "address2": "Mailbox 456",
      "city": "OTTAWA",
      "countryCode": "CA",
      "postalCode": "K1A 0B1",
      "provinceName": "ONTARIO",
      "state": "NW"
    }
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    delete:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Delete Bank Account
      x-child-product-name: BankAccounts
      summary: Delete a trusted bank account for a user
      operationId: DeleteBankAccount
      parameters:
        - name: bankAccountCommonId
          in: path
          description: Id of the bank account
          required: true
          schema:
            type: string
            description: Id of the bank account
            nullable: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    patch:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Modify Bank Account
      x-child-product-name: BankAccounts
      summary: To Patch Bank Account By User
      operationId: PatchBankAccountByUser
      parameters:
        - name: bankAccountCommonId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankAccountPatchRequest'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountPatchRequest'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/BankAccountPatchRequest'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankAccountPatchRequest'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/users/{userId}/bankAccounts/{bankAccountCommonId}':
    get:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Get User Bank Account
      x-child-product-name: BankAccounts
      summary: Retrieves the bank account information given a bankAccountId.
      operationId: GetBankAccountByTenantsAsync
      parameters:
        - name: userId
          in: path
          description: User Id
          required: true
          schema:
            type: string
            description: User Id
            nullable: true
        - name: bankAccountCommonId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: idType
          in: query
          schema:
            $ref: '#/components/schemas/UserIdType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountGetModelIEnumerableIpsResponse'
              example: {
  "data": {
    "self": "/api/v1/tenants/25725/users/1/bankAccounts/d21c18c5-c4ac-4076-a727-36ed79adccf8",
    "id": "d21c18c5-c4ac-4076-a727-36ed79adccf8",
    "modifiableFields": [
      "nickname",
      "businessName",
      "primaryAccountOwner",
      "secondaryAccountOwner",
      "checkPrintAddress",
      "checkPrintAddressInternational",
      "bankingOptions"
    ],
    "accountType": "Checking",
    "maskedAccountNumber": "********1234",
    "nickname": "A bank account",
    "balanceUri": "/api/v1/me/bankAccounts/d21c18c5-c4ac-4076-a727-36ed79adccf8/balance",
    "isPreferred": true,
    "unmaskedAccountNumberUri": "/api/v1/me/bankAccounts/d21c18c5-c4ac-4076-a727-36ed79adccf8/accountnumber",
    "routingTransitNumber": "031000859",
    "isBusiness": true,
    "businessName": "Biller AT&T",
    "primaryAccountOwner": "John",
    "secondaryAccountOwner": "James Bond",
    "confirmationStatus": "Pending",
    "accountStatus": "Active",
    "checkPrintAddress": {
      "address1": "6000 Perimeter Drive",
      "address2": "Mailbox 1034",
      "city": "Dublin",
      "state": "OH",
      "zipCode": "43017"
    },
    "checkPrintAddressInternational": {
      "address1": "1010 EASY ST",
      "address2": "Mailbox 456",
      "city": "OTTAWA",
      "countryCode": "CA",
      "postalCode": "K1A 0B1",
      "provinceName": "ONTARIO",
      "state": "NW"
    },
    "bankingOptions": {
      "isDownloadTransactionsEnabled": false,
      "isSourceTransferAccount": true,
      "isDestinationTransferAccount": true
    }
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    delete:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Delete User Bank Account
      x-child-product-name: BankAccounts
      summary: Delete a trusted bank account for a user
      operationId: DeleteBankAccountByTenant
      parameters:
        - name: userId
          in: path
          description: Challenger User Id
          required: true
          schema:
            type: string
            description: Challenger User Id
            nullable: true
        - name: bankAccountCommonId
          in: path
          description: Id of the bank account
          required: true
          schema:
            type: string
            description: Id of the bank account
            nullable: true
        - name: idType
          in: query
          schema:
            $ref: '#/components/schemas/UserIdType'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    patch:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Modify User Bank Account
      x-child-product-name: BankAccounts
      operationId: PatchBankAccountByTenant
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: bankAccountCommonId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: idType
          in: query
          schema:
            $ref: '#/components/schemas/UserIdType'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankAccountPatchRequest'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountPatchRequest'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/BankAccountPatchRequest'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankAccountPatchRequest'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/bankAccounts/{bankCommonId}/accountNumber':
    get:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Get Account Number
      x-child-product-name: BankAccounts
      operationId: GetAccountNumberAsync
      parameters:
        - name: bankCommonId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringIpsResponse'
              example: "112233445566"
        '404':
          description: Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/bankAccounts/{id}/verificationInfo':
    get:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Get Verification Info
      x-child-product-name: BankAccounts
      operationId: GetAccountVerificationInfoAsync
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationInfoIpsResponse'
              example: {
  "data": {
    "verificationToken": "CE02#4#Jmo3FUoRNOqT+a8oJvSrLZKdV3DKRaRwTVThSz/jMPmlP5WKqOgG4jLi+AxivkCSf+oJA7/AL/fTzFJB6F9lh4K6L62Rr9gpqekcZFvq3rsapr5Ppffucg==",
    "verificationStatus": "Completed",
    "newAccount": true
  },
  "result": {
    "success": true
  }
}
        '404':
          description: Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/bankAccounts/{id}/completeVerification':
    post:
      tags:
        - BankAccounts
      x-group-name: BankAccounts
      x-proxy-name: Verify Bank Account
      x-child-product-name: BankAccounts
      summary: The POST complete verification API enables the UI application to know the status of account verification through VerifyNow.
      operationId: PostCompleteVerification
      parameters:
        - name: id
          in: path
          description: Id of bank account.
          required: true
          schema:
            type: string
            description: Id of bank account.
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountPostVerificationResponseIpsResponse'
              example: {
  "data": {
    "confirmationStatus": "Confirmed"
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/bills:
    get:
      tags:
        - Bills
      x-group-name: Bills
      x-proxy-name: Get Bills
      x-child-product-name: Bills
      summary: Get list of bills
      operationId: Get
      parameters:
        - name: numberOfDays
          in: query
          schema:
            type: string
            nullable: true
        - name: startingDate
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillIEnumerableIpsResponse'
              example: {
  "data": [
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo4.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-22c1d4fd-21fa-4edd-aba0-bed2a2f2c336.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-05a1af39-18ff-46ae-b0be-788e0ce91bd2.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180415110613114351",
      "dueDate": "2022-05-07",
      "actionByDate": "2022-05-02T20:41:29.4482522Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=70e693cf-6f25-419c-8961-06b1210fc7e9",
      "filedBillInfo": {
        "note": "Already paid",
        "reason": "BillerWebSite"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Paid",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180415110613114351",
      "id": "20180415110613114351"
    },
    {
      "amountDue": 2109.0,
      "balanceAmountDue": 0.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo5.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-9ec08b5e-4045-4566-af34-6c49fd99a814.jpg"
      },
      "billType": "FromSubscriber",
      "dateFirstViewed": "2022-01-26",
      "destinationUrl": "/api/v1/me/payees/20180422110613114351",
      "dueDate": "2022-01-31",
      "actionByDate": "2022-01-28T21:41:29.4515825Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=4012509a-f113-4d34-9693-51bd70dbc02d",
      "filedBillInfo": {
        "note": "Payment failed",
        "reason": "BillerWebSite"
      },
      "isDetailUrlIframeSupported": true,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-113",
      "status": "PaymentCanceled",
      "useDueDateText": false,
      "self": "/api/v1/me/Bills/20180422110613114351",
      "id": "20180422110613114351"
    },
    {
      "amountDue": 1211.0,
      "balanceAmountDue": 0.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo6.gif"
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180502110613114351",
      "dueDate": "2022-02-15",
      "actionByDate": "2022-02-10T21:41:29.4516223Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=d80e1199-7954-4b52-a011-f7d7addc662c",
      "filedBillInfo": {
        "note": "Already paid",
        "reason": "NotPaid"
      },
      "isDetailUrlIframeSupported": true,
      "minimumAmountDue": 123.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Unpaid",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180502110613114351",
      "id": "20180502110613114351"
    },
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo7.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-aec0fdce-2c46-4c98-9954-474a468c14db.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-fe8d473f-ebe6-4206-9e5d-6440bec96b3c.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromSubscriber",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180605110613114351",
      "dueDate": "2022-02-01",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=a40864f3-4ef2-4978-bc28-a2e5fc00a6bb",
      "filedBillInfo": {
        "note": "No amount",
        "reason": "ZeroBalanceBill"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Filed",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180605110613114351",
      "id": "20180605110613114351"
    },
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo8.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-bdabb2db-b8c6-4c05-812b-d553b94dcdd7.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-49451075-784c-4cc2-a2c8-2d5b187d7964.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180709110613114351",
      "dueDate": "2022-04-17",
      "actionByDate": "2022-04-14T20:41:29.4517158Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=6ba62f54-4678-4308-b29f-4181a58a835f",
      "filedBillInfo": {
        "note": "Payment failed due to email transaction",
        "reason": "Mail"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "PaymentFailed",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180709110613114351",
      "id": "20180709110613114351"
    }
  ],
  "result": {
    "success": true
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/BillIEnumerableIpsResponse'
              example: {
  "data": [
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo4.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-22c1d4fd-21fa-4edd-aba0-bed2a2f2c336.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-05a1af39-18ff-46ae-b0be-788e0ce91bd2.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180415110613114351",
      "dueDate": "2022-05-07",
      "actionByDate": "2022-05-02T20:41:29.4482522Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=70e693cf-6f25-419c-8961-06b1210fc7e9",
      "filedBillInfo": {
        "note": "Already paid",
        "reason": "BillerWebSite"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Paid",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180415110613114351",
      "id": "20180415110613114351"
    },
    {
      "amountDue": 2109.0,
      "balanceAmountDue": 0.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo5.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-9ec08b5e-4045-4566-af34-6c49fd99a814.jpg"
      },
      "billType": "FromSubscriber",
      "dateFirstViewed": "2022-01-26",
      "destinationUrl": "/api/v1/me/payees/20180422110613114351",
      "dueDate": "2022-01-31",
      "actionByDate": "2022-01-28T21:41:29.4515825Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=4012509a-f113-4d34-9693-51bd70dbc02d",
      "filedBillInfo": {
        "note": "Payment failed",
        "reason": "BillerWebSite"
      },
      "isDetailUrlIframeSupported": true,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-113",
      "status": "PaymentCanceled",
      "useDueDateText": false,
      "self": "/api/v1/me/Bills/20180422110613114351",
      "id": "20180422110613114351"
    },
    {
      "amountDue": 1211.0,
      "balanceAmountDue": 0.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo6.gif"
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180502110613114351",
      "dueDate": "2022-02-15",
      "actionByDate": "2022-02-10T21:41:29.4516223Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=d80e1199-7954-4b52-a011-f7d7addc662c",
      "filedBillInfo": {
        "note": "Already paid",
        "reason": "NotPaid"
      },
      "isDetailUrlIframeSupported": true,
      "minimumAmountDue": 123.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Unpaid",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180502110613114351",
      "id": "20180502110613114351"
    },
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo7.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-aec0fdce-2c46-4c98-9954-474a468c14db.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-fe8d473f-ebe6-4206-9e5d-6440bec96b3c.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromSubscriber",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180605110613114351",
      "dueDate": "2022-02-01",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=a40864f3-4ef2-4978-bc28-a2e5fc00a6bb",
      "filedBillInfo": {
        "note": "No amount",
        "reason": "ZeroBalanceBill"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Filed",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180605110613114351",
      "id": "20180605110613114351"
    },
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo8.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-bdabb2db-b8c6-4c05-812b-d553b94dcdd7.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-49451075-784c-4cc2-a2c8-2d5b187d7964.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180709110613114351",
      "dueDate": "2022-04-17",
      "actionByDate": "2022-04-14T20:41:29.4517158Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=6ba62f54-4678-4308-b29f-4181a58a835f",
      "filedBillInfo": {
        "note": "Payment failed due to email transaction",
        "reason": "Mail"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "PaymentFailed",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180709110613114351",
      "id": "20180709110613114351"
    }
  ],
  "result": {
    "success": true
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/BillIEnumerableIpsResponse'
              example: {
  "data": [
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo4.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-22c1d4fd-21fa-4edd-aba0-bed2a2f2c336.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-05a1af39-18ff-46ae-b0be-788e0ce91bd2.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180415110613114351",
      "dueDate": "2022-05-07",
      "actionByDate": "2022-05-02T20:41:29.4482522Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=70e693cf-6f25-419c-8961-06b1210fc7e9",
      "filedBillInfo": {
        "note": "Already paid",
        "reason": "BillerWebSite"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Paid",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180415110613114351",
      "id": "20180415110613114351"
    },
    {
      "amountDue": 2109.0,
      "balanceAmountDue": 0.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo5.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-9ec08b5e-4045-4566-af34-6c49fd99a814.jpg"
      },
      "billType": "FromSubscriber",
      "dateFirstViewed": "2022-01-26",
      "destinationUrl": "/api/v1/me/payees/20180422110613114351",
      "dueDate": "2022-01-31",
      "actionByDate": "2022-01-28T21:41:29.4515825Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=4012509a-f113-4d34-9693-51bd70dbc02d",
      "filedBillInfo": {
        "note": "Payment failed",
        "reason": "BillerWebSite"
      },
      "isDetailUrlIframeSupported": true,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-113",
      "status": "PaymentCanceled",
      "useDueDateText": false,
      "self": "/api/v1/me/Bills/20180422110613114351",
      "id": "20180422110613114351"
    },
    {
      "amountDue": 1211.0,
      "balanceAmountDue": 0.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo6.gif"
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180502110613114351",
      "dueDate": "2022-02-15",
      "actionByDate": "2022-02-10T21:41:29.4516223Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=d80e1199-7954-4b52-a011-f7d7addc662c",
      "filedBillInfo": {
        "note": "Already paid",
        "reason": "NotPaid"
      },
      "isDetailUrlIframeSupported": true,
      "minimumAmountDue": 123.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Unpaid",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180502110613114351",
      "id": "20180502110613114351"
    },
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo7.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-aec0fdce-2c46-4c98-9954-474a468c14db.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-fe8d473f-ebe6-4206-9e5d-6440bec96b3c.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromSubscriber",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180605110613114351",
      "dueDate": "2022-02-01",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=a40864f3-4ef2-4978-bc28-a2e5fc00a6bb",
      "filedBillInfo": {
        "note": "No amount",
        "reason": "ZeroBalanceBill"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "Filed",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180605110613114351",
      "id": "20180605110613114351"
    },
    {
      "amountDue": 110.0,
      "balanceAmountDue": 22.0,
      "billerInfo": {
        "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo8.gif",
        "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-bdabb2db-b8c6-4c05-812b-d553b94dcdd7.jpg",
        "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-49451075-784c-4cc2-a2c8-2d5b187d7964.jpg",
        "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
      },
      "billType": "FromBiller",
      "dateFirstViewed": "2022-01-22",
      "destinationUrl": "/api/v1/me/payees/20180709110613114351",
      "dueDate": "2022-04-17",
      "actionByDate": "2022-04-14T20:41:29.4517158Z",
      "dueDateText": "Due Upon Receipt.",
      "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=6ba62f54-4678-4308-b29f-4181a58a835f",
      "filedBillInfo": {
        "note": "Payment failed due to email transaction",
        "reason": "Mail"
      },
      "isDetailUrlIframeSupported": false,
      "minimumAmountDue": 0.0,
      "replacedBillId": "bill-replace-id-223",
      "status": "PaymentFailed",
      "useDueDateText": true,
      "self": "/api/v1/me/Bills/20180709110613114351",
      "id": "20180709110613114351"
    }
  ],
  "result": {
    "success": true
  }
}
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '204':
          description: Success
  '/api/v1/me/bills/{id}':
    get:
      tags:
        - Bills
      x-group-name: Bills
      x-proxy-name: Get Bill
      x-child-product-name: Bills
      summary: Retrieves bill item based on bill id
      operationId: GetEbillById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillIpsResponse'
              example: {
  "data": {
    "amountDue": 110.0,
    "balanceAmountDue": 22.0,
    "billerInfo": {
      "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo4.gif",
      "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-b5588ce9-6c17-4870-8da1-60292bcef59c.jpg",
      "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-14fe2eae-86f5-4f15-a84a-d5428e243606.jpg",
      "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
    },
    "billType": "FromBiller",
    "dateFirstViewed": "2022-01-22",
    "destinationUrl": "/api/v1/me/payees/20180415110613114351",
    "dueDate": "2022-05-07",
    "dueDateText": "Due Upon Receipt.",
    "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=120c92d1-dfe2-44b5-a085-c00a0745ce27",
    "filedBillInfo": {
      "note": "Already paid",
      "reason": "BillerWebSite"
    },
    "isDetailUrlIframeSupported": false,
    "minimumAmountDue": 0.0,
    "replacedBillId": "bill-replace-id-223",
    "status": "Paid",
    "useDueDateText": true,
    "self": "/api/v1/me/Bills/20180415110613114351",
    "id": "20180415110613114351"
  },
  "result": {
    "success": true
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/BillIpsResponse'
              example: {
  "data": {
    "amountDue": 110.0,
    "balanceAmountDue": 22.0,
    "billerInfo": {
      "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo4.gif",
      "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-b5588ce9-6c17-4870-8da1-60292bcef59c.jpg",
      "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-14fe2eae-86f5-4f15-a84a-d5428e243606.jpg",
      "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
    },
    "billType": "FromBiller",
    "dateFirstViewed": "2022-01-22",
    "destinationUrl": "/api/v1/me/payees/20180415110613114351",
    "dueDate": "2022-05-07",
    "dueDateText": "Due Upon Receipt.",
    "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=120c92d1-dfe2-44b5-a085-c00a0745ce27",
    "filedBillInfo": {
      "note": "Already paid",
      "reason": "BillerWebSite"
    },
    "isDetailUrlIframeSupported": false,
    "minimumAmountDue": 0.0,
    "replacedBillId": "bill-replace-id-223",
    "status": "Paid",
    "useDueDateText": true,
    "self": "/api/v1/me/Bills/20180415110613114351",
    "id": "20180415110613114351"
  },
  "result": {
    "success": true
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/BillIpsResponse'
              example: {
  "data": {
    "amountDue": 110.0,
    "balanceAmountDue": 22.0,
    "billerInfo": {
      "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/cflogo4.gif",
      "billReferenceImageUrl": "https://d3tdunqjn7n0wj.cloudfront.net/720x480/blaming-user-cover-crop-b5588ce9-6c17-4870-8da1-60292bcef59c.jpg",
      "billReferenceLinkUrl": "https://xcbvnxfgh.test.net/720x480/blaming-user-cover-crop-14fe2eae-86f5-4f15-a84a-d5428e243606.jpg",
      "billReferenceText": "A text link that can be used instead of the image link. Using this text may improve performance over downloading an image (teaser ad)."
    },
    "billType": "FromBiller",
    "dateFirstViewed": "2022-01-22",
    "destinationUrl": "/api/v1/me/payees/20180415110613114351",
    "dueDate": "2022-05-07",
    "dueDateText": "Due Upon Receipt.",
    "detailUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=120c92d1-dfe2-44b5-a085-c00a0745ce27",
    "filedBillInfo": {
      "note": "Already paid",
      "reason": "BillerWebSite"
    },
    "isDetailUrlIframeSupported": false,
    "minimumAmountDue": 0.0,
    "replacedBillId": "bill-replace-id-223",
    "status": "Paid",
    "useDueDateText": true,
    "self": "/api/v1/me/Bills/20180415110613114351",
    "id": "20180415110613114351"
  },
  "result": {
    "success": true
  }
}
        '204':
          description: Success
        '404':
          description: Not Found
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/bills/{id}/File':
    patch:
      tags:
        - Bills
      x-group-name: Bills
      x-proxy-name: File Bill
      x-child-product-name: Bills
      summary: Allows subscriber to file a bill
      operationId: FileBills
      parameters:
        - name: id
          in: path
          description: The Bill  Identifier.
          required: true
          schema:
            type: string
            description: The Bill  Identifier.
            nullable: true
      requestBody:
        description: The filled bill information.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FiledBillInfo'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/FiledBillInfo'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/FiledBillInfo'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/FiledBillInfo'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/bills/{id}/detail':
    get:
      tags:
        - Bills
      x-group-name: Bills
      x-proxy-name: Get Bill Details
      x-child-product-name: Bills
      summary: Retrieves bill detail uri based on bill item id
      operationId: GetBillDetailUri
      parameters:
        - name: id
          in: path
          description: The Bill Identifier.
          required: true
          schema:
            type: string
            description: The Bill Identifier.
            nullable: true
      responses:
        '307':
          description: Redirect
          content:
            text/plain:
              schema:
                type: string
                format: uri
              example: "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=2dcb8bc9-7e28-47b9-81d4-d353207e26fc"
            application/json:
              schema:
                type: string
                format: uri
              example: "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=2dcb8bc9-7e28-47b9-81d4-d353207e26fc"
            text/json:
              schema:
                type: string
                format: uri
              example: "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=2dcb8bc9-7e28-47b9-81d4-d353207e26fc"
        '404':
          description: Not Found
        '401':
          description: Unauthorized
  '/api/v1/me/cardAccounts/{cardId}':
    get:
      tags:
        - CardAccounts
      x-group-name: CardAccounts
      x-proxy-name: Get Card Account
      x-child-product-name: CardAccounts
      summary: Returns the card account details for a given financial account Id.
      operationId: GetCardAccount
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAccountGetModelIEnumerableIpsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    patch:
      tags:
        - CardAccounts
      x-group-name: CardAccounts
      x-proxy-name: Modify Card Accounts
      x-child-product-name: CardAccounts
      summary: Modify card account list
      operationId: PatchCardAccounts
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CardAccountPatch'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/CardAccountPatch'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/CardAccountPatch'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/CardAccountPatch'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    delete:
      tags:
        - CardAccounts
      x-group-name: CardAccounts
      x-proxy-name: Delete Card Account
      x-child-product-name: CardAccounts
      summary: Delete card account for a subscriber
      operationId: DeleteCardAccounts
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/cardAccounts:
    get:
      tags:
        - CardAccounts
      x-group-name: CardAccounts
      x-proxy-name: Get Card Account List
      x-child-product-name: CardAccounts
      summary: Returns the card account list
      operationId: GetCardAccounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAccountGetModelIEnumerableIpsResponse'
              example: [
  {
    "self": "/api/v1/me/cardAccounts/affaec79-cf3c-4b3c-b849-6be26768abbd",
    "id": "affaec79-cf3c-4b3c-b849-6be26768abbd",
    "addedBy": "Subscriber",
    "cardNumberMasked": "********1234",
    "modifiableFields": [
      "billingAddress",
      "expirationYear",
      "expirationMonth",
      "externalAccountDescription",
      "nameOnCard",
      "nickname"
    ],
    "deleteAllowed": true,
    "cardType": "Visa",
    "isDebit": true,
    "billingAddress": {
      "address1": "1436 HOUSEMAN",
      "address2": "HUNSLOW",
      "city": "Jackson Heights",
      "state": "NY",
      "zipCode": "11372"
    },
    "expirationMonth": 11,
    "expirationYear": 2020,
    "externalAccountDescription": "ExternalAccountDescription",
    "nameOnCard": "John Kennedy",
    "nickname": "John"
  },
  {
    "self": "/api/v1/me/cardAccounts/509adfc3-671e-4694-ac01-3d897ee9f069",
    "id": "509adfc3-671e-4694-ac01-3d897ee9f069",
    "addedBy": "Sponsor",
    "cardNumberMasked": "********5672",
    "deleteAllowed": false,
    "cardType": "Visa",
    "isDebit": false,
    "billingAddress": {
      "address1": "2321 HOUSEMAN",
      "address2": "HUNSLOW",
      "city": "Madrid Square",
      "state": "NY",
      "zipCode": "11332"
    },
    "expirationMonth": 7,
    "expirationYear": 2021,
    "externalAccountDescription": "ExternalAccountDescription",
    "nameOnCard": "Steve Law",
    "nickname": "Steve"
  }
]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    post:
      tags:
        - CardAccounts
      x-group-name: CardAccounts
      x-proxy-name: Add Card Account
      x-child-product-name: CardAccounts
      summary: Add a card account as a funding acount for a Subscriber
      operationId: PostCardAccount
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CardAccountPostRequest'
            example: {
  "cardNumber": "8642735901",
  "cardType": "Visa",
  "expirationMonth": 6,
  "expirationYear": 2018,
  "externalAccountDescription": "Ext Acct description",
  "nameOnCard": "John Kennedy",
  "nickname": "John",
  "billingAddress": {
    "address1": "6883 Made Up St.",
    "address2": "Apt 354",
    "city": "Athens",
    "state": "GA",
    "zipCode": "30306"
  },
  "cvv": "755"
}
          application/json:
            schema:
              $ref: '#/components/schemas/CardAccountPostRequest'
            example: {
  "cardNumber": "8642735901",
  "cardType": "Visa",
  "expirationMonth": 6,
  "expirationYear": 2018,
  "externalAccountDescription": "Ext Acct description",
  "nameOnCard": "John Kennedy",
  "nickname": "John",
  "billingAddress": {
    "address1": "6883 Made Up St.",
    "address2": "Apt 354",
    "city": "Athens",
    "state": "GA",
    "zipCode": "30306"
  },
  "cvv": "755"
}
          text/json:
            schema:
              $ref: '#/components/schemas/CardAccountPostRequest'
            example: {
  "cardNumber": "8642735901",
  "cardType": "Visa",
  "expirationMonth": 6,
  "expirationYear": 2018,
  "externalAccountDescription": "Ext Acct description",
  "nameOnCard": "John Kennedy",
  "nickname": "John",
  "billingAddress": {
    "address1": "6883 Made Up St.",
    "address2": "Apt 354",
    "city": "Athens",
    "state": "GA",
    "zipCode": "30306"
  },
  "cvv": "755"
}
          application/*+json:
            schema:
              $ref: '#/components/schemas/CardAccountPostRequest'
            example: {
  "cardNumber": "8642735901",
  "cardType": "Visa",
  "expirationMonth": 6,
  "expirationYear": 2018,
  "externalAccountDescription": "Ext Acct description",
  "nameOnCard": "John Kennedy",
  "nickname": "John",
  "billingAddress": {
    "address1": "6883 Made Up St.",
    "address2": "Apt 354",
    "city": "Athens",
    "state": "GA",
    "zipCode": "30306"
  },
  "cvv": "755"
}
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAccountPostResponseIpsListItemResponse'
              example: {
  "data": {
    "self": "/api/v1/me/CardAccounts/abce8bbe-fd1d-4794-b120-94e434d7eb1e",
    "id": "abce8bbe-fd1d-4794-b120-94e434d7eb1e"
  },
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/cardAccounts/CardAccountAddLimits:
    get:
      tags:
        - CardAccounts
      x-group-name: CardAccounts
      x-proxy-name: Get Card Account Limits
      x-child-product-name: CardAccounts
      summary: Returns the Card account limits
      operationId: GetCardAccountAddLimits
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAccountAddLimitsIpsResponse'
              example: {
  "data": {
    "rollingPeriodDaysLimit": 30,
    "rollingPeriodDaysLimitModifiable": true,
    "rollingPeriodCardsLimit": 1,
    "rollingPeriodCardsRemainingCount": 1,
    "rollingPeriodCardsLimitModifiable": true,
    "sameCardDeleteAddLimit": 3,
    "sameCardDeleteAddLimitModifiable": true,
    "activeCardLimit": 5,
    "activeCardRemainingCount": 5,
    "activeCardLimitModifiable": true
  },
  "result": {
    "success": true
  }
}
        '204':
          description: Success
  /api/Health:
    get:
      tags:
        - Health
      x-group-name: Health
      x-proxy-name: Ping
      x-child-product-name: Health
      operationId: Get
      responses:
        '200':
          description: Success
  /api/v1/me/legalDocumentAgreements:
    get:
      tags:
        - Ldds
      x-group-name: Ldds
      x-proxy-name: Get Ldd List
      x-child-product-name: Ldds
      summary: Retrieves legal document list.
      operationId: Get
      parameters:
        - name: locale
          in: query
          schema:
            pattern: '[A-Za-z]{2}-[A-Za-z]{2}$'
            type: string
            nullable: true
        - name: agreementRequired
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalDocumentAgreementListIpsResponse'
              example: [
  {
    "agreementRequired": true,
    "firstTimeAcceptance": true,
    "legalDocumentType": "ESIGN",
    "legalDocumentUri": "/api/v1/tenants/25725/legalDocuments/00000000-0000-0000-0000-000000000000",
    "locale": "en-US"
  },
  {
    "agreementRequired": true,
    "firstTimeAcceptance": true,
    "legalDocumentType": "PrivacyPolicy",
    "legalDocumentUri": "/api/v1/tenants/25725/legalDocuments/00000000-0000-0000-0000-000000000000",
    "locale": "en-US"
  },
  {
    "agreementRequired": true,
    "firstTimeAcceptance": true,
    "legalDocumentType": "TCPA",
    "legalDocumentUri": "/api/v1/tenants/25725/legalDocuments/00000000-0000-0000-0000-000000000000",
    "locale": "en-US"
  },
  {
    "agreementRequired": true,
    "firstTimeAcceptance": true,
    "legalDocumentType": "TermsConditions",
    "legalDocumentUri": "/api/v1/tenants/25725/legalDocuments/00000000-0000-0000-0000-000000000000",
    "locale": "en-US"
  }
]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    post:
      tags:
        - Ldds
      x-group-name: Ldds
      x-proxy-name: Accept Ldd
      x-child-product-name: Ldds
      summary: Post LDD for user acceptance.
      operationId: PostLegalDocument
      requestBody:
        description: Request of legal document
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostLegalDocument'
            example: {
  "legalDocumentId": "00000000-0000-0000-0000-000000000000"
}
          application/json:
            schema:
              $ref: '#/components/schemas/PostLegalDocument'
            example: {
  "legalDocumentId": "00000000-0000-0000-0000-000000000000"
}
          text/json:
            schema:
              $ref: '#/components/schemas/PostLegalDocument'
            example: {
  "legalDocumentId": "00000000-0000-0000-0000-000000000000"
}
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostLegalDocument'
            example: {
  "legalDocumentId": "00000000-0000-0000-0000-000000000000"
}
      responses:
        '201':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/tenants/{tenantId}/legalDocuments/{id}':
    get:
      tags:
        - Ldds
      x-group-name: Ldds
      x-proxy-name: Get Ldd
      x-child-product-name: Ldds
      summary: Get specific legal document.
      operationId: GetLegalDocument
      parameters:
        - name: tenantId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalDocumentIpsResponse'
  '/api/v1/tenants/{tenantId}/legalDocuments':
    get:
      tags:
        - Ldds
      x-group-name: Ldds
      x-proxy-name: Get Ldds for Tenant
      x-child-product-name: Ldds
      summary: Get legal documents for specific tenant.
      operationId: GetLegalDocuments
      parameters:
        - name: tenantId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalDocumentListIpsResponse'
  /api/v1/merchants/Search:
    get:
      tags:
        - Merchants
      x-group-name: Merchants
      x-proxy-name: Search Merchant
      x-child-product-name: Merchants
      summary: Search Merchant based on merchant name
      operationId: SearchMerchant
      parameters:
        - name: name
          in: query
          required: true
          schema:
            maxLength: 32
            minLength: 3
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantIEnumerableIpsResponse'
              example: {
  "data": [
    {
      "logoUri": "https://payeelogos-dev.apps.fog.onefiserv.net/121.png",
      "merchantZipRequired": false,
      "name": "Bonton",
      "self": "/api/v1/merchants/90c70557-7a93-4dac-9f3d-f48c872d22b2",
      "id": "90c70557-7a93-4dac-9f3d-f48c872d22b2"
    },
    {
      "logoUri": "https://payeelogos-dev.apps.fog.onefiserv.net/120.png",
      "merchantZipRequired": false,
      "name": "BayState Gas",
      "self": "/api/v1/merchants/db8c20f9-db24-42bf-886a-870caa84135c",
      "id": "db8c20f9-db24-42bf-886a-870caa84135c"
    },
    {
      "logoUri": "https://payeelogos-dev.apps.fog.onefiserv.net/123.png",
      "merchantZipRequired": false,
      "name": "Bank of America",
      "self": "/api/v1/merchants/36c4fd0c-2c23-4f48-b446-91ad2b4195ec",
      "id": "36c4fd0c-2c23-4f48-b446-91ad2b4195ec"
    }
  ],
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '204':
          description: Success
  '/api/v1/me/payees/{id}/ebillService/paperSuppressionTerms':
    get:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Get Paper Suppression Terms
      x-child-product-name: Payees
      operationId: GetPaperSuppressionTerms
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: redirect
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '404':
          description: Not Found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad Request
        '307':
          description: Redirect
          content:
            application/json:
              schema:
                type: string
                format: uri
              example: "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=w+g0GPIMPoplR+=="
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperSupressionTermsResponseIpsResponse'
              example: {
  "data": {
    "paperSuppressionTermsUrl": "https://billdetail-test.getbills.com/eBillCentralSSO/EBAS/ViewDetailDirect?payloadEbas=w+g0GPIMPoplR+=="
  },
  "result": {
    "success": true,
    "resultInfo": []
  }
}
  /api/v1/me/payees:
    get:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Get Payee List
      x-child-product-name: Payees
      operationId: Get
      parameters:
        - name: returnInactivePayees
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeListIpsResponse'
              example: {
  "data": {
    "payees": [
      {
        "name": "Verizon Wireless",
        "nickname": "Verizon",
        "maskedAccountNumber": "****7890",
        "unmaskedAccountNumberUri": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/payeeAccountNumber",
        "category": "Utility",
        "contactPhoneNumber": "614-555-1212",
        "merchantUri": "/api/v1/merchants/97899985-b082-47d0-9b9e-e656f8836898",
        "automaticTransactionUris": [
          "/api/v1/me/automaticTransactions/4ed2c8b9-3baa-4f4c-9176-aa7fbc594a85",
          "/api/v1/me/automaticTransactions/674b3219-fbca-4013-a65a-fe8f393826d9"
        ],
        "address": {
          "address1": "6000 Perimeter Drive",
          "address2": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43017"
        },
        "lastUsedFundingAccountUri": "/api/v1/me/bankAccounts/f935e8e2-3da2-4db4-b438-2e86d24ae205",
        "socialTokens": [
          {
            "socialToken": {
              "value": "test@fiserv.com",
              "type": "Email"
            },
            "self": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/socialTokens/46676f71-605b-4429-934a-a0622414b214",
            "id": "46676f71-605b-4429-934a-a0622414b214"
          },
          {
            "socialToken": {
              "value": "6145551212",
              "type": "Phone"
            },
            "self": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/socialTokens/8924e98f-49a9-483c-8f61-46fb20688dfe",
            "id": "8924e98f-49a9-483c-8f61-46fb20688dfe"
          }
        ],
        "accountTokens": [
          {
            "accountToken": {
              "account": {
                "accountType": "Checking",
                "maskedAccountNumber": "***5309",
                "isPreferred": false,
                "isBusiness": false,
                "confirmationStatus": "Confirmed",
                "accountStatus": "Active"
              }
            },
            "self": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/socialTokens/6ff1075a-75c8-4daa-9432-e2632f9f6959",
            "id": "6ff1075a-75c8-4daa-9432-e2632f9f6959"
          }
        ],
        "ebillServiceActivationUri": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/ebillCapability",
        "ebillServiceActivationType": "Lite",
        "ebillServiceUri": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/ebillService",
        "payeeLogoUrl": "https://payeelogos-dev.apps.fog.onefiserv.net/499.png",
        "payeeLogoGeneric": true,
        "modifiableFields": [
          "Nickname",
          "Category"
        ],
        "status": "Active",
        "legacyPayeeId": "1",
        "self": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add",
        "id": "08957bb7-303f-4863-b637-3891b7200add"
      },
      {
        "name": "Comcast",
        "nickname": "Comcast",
        "maskedAccountNumber": "****7890",
        "unmaskedAccountNumberUri": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/payeeAccountNumber",
        "category": "Utility",
        "contactPhoneNumber": "614-555-1212",
        "merchantUri": "/api/v1/merchants/2cf95d9e-21ed-4aac-bfbf-9b131ad44020",
        "automaticTransactionUris": [
          "/api/v1/me/automaticTransactions/ca73c2d9-1729-4123-96da-b09f4979c088",
          "/api/v1/me/automaticTransactions/6fe11e78-9dfd-4eb3-aaf7-5098342336ef"
        ],
        "reminderModelUri": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/reminderModel",
        "address": {
          "address1": "6000 Perimeter Drive",
          "address2": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43017"
        },
        "lastUsedFundingAccountUri": "/api/v1/me/bankAccounts/a3e86450-feaa-40e2-8b71-a481bccf0f2e",
        "socialTokens": [
          {
            "socialToken": {
              "value": "test@fiserv.com",
              "type": "Email"
            },
            "self": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/socialTokens/1f893559-5471-4ef3-a5d3-cf255ce74f62",
            "id": "1f893559-5471-4ef3-a5d3-cf255ce74f62"
          },
          {
            "socialToken": {
              "value": "6145551212",
              "type": "Phone"
            },
            "self": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/socialTokens/0f0516bc-2083-450b-978b-09b79ec1dc21",
            "id": "0f0516bc-2083-450b-978b-09b79ec1dc21"
          }
        ],
        "accountTokens": [
          {
            "accountToken": {
              "account": {
                "accountType": "Savings",
                "maskedAccountNumber": "***4444",
                "isPreferred": false,
                "isBusiness": false,
                "confirmationStatus": "Confirmed",
                "accountStatus": "Active"
              }
            },
            "self": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/socialTokens/b00e234e-0e50-4d3c-8029-754df0c0c4c5",
            "id": "b00e234e-0e50-4d3c-8029-754df0c0c4c5"
          }
        ],
        "ebillServiceActivationUri": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/ebillCapability",
        "ebillServiceActivationType": "Full",
        "ebillServiceUri": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/ebillService",
        "payeeLogoUrl": "https://payeelogos-dev.apps.fog.onefiserv.net/499.png",
        "payeeLogoGeneric": true,
        "modifiableFields": [
          "Nickname",
          "Category"
        ],
        "status": "Active",
        "legacyPayeeId": "2",
        "self": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c",
        "id": "5057f8dd-ebb0-4359-9eeb-b003283af89c"
      },
      {
        "name": "John Smith",
        "nickname": "John",
        "category": "Friends",
        "contactPhoneNumber": "614-555-1212",
        "automaticTransactionUris": [
          "/api/v1/me/automaticTransactions/b38ca08b-8997-4f2c-b716-a67a0c8472ac",
          "/api/v1/me/automaticTransactions/5b996fae-2762-4a38-a9a1-64c8dba6dab6"
        ],
        "reminderModelUri": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930/reminderModel",
        "lastUsedFundingAccountUri": "/api/v1/me/bankAccounts/ba9d16a0-1334-4017-9bf0-4fec7a168945",
        "socialTokens": [
          {
            "socialToken": {
              "value": "john.smith@fiserv.com",
              "type": "Email"
            },
            "self": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930/socialTokens/bf38cd8d-42f4-4090-a35a-27f78a919e6d",
            "id": "bf38cd8d-42f4-4090-a35a-27f78a919e6d"
          },
          {
            "socialToken": {
              "value": "6145551212",
              "type": "Phone"
            },
            "self": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930/socialTokens/cb882cf5-9312-4769-8165-0de007c29bac",
            "id": "cb882cf5-9312-4769-8165-0de007c29bac"
          }
        ],
        "accountTokens": [
          {
            "accountToken": {
              "account": {
                "accountType": "Savings",
                "maskedAccountNumber": "***4444",
                "isPreferred": false,
                "unmaskedAccountNumberUri": "/api/v1/me/bankAccounts/bcea58df-2fe2-4997-bbff-5d7dc291181a/fullAccountNumber",
                "isBusiness": false,
                "confirmationStatus": "Confirmed",
                "accountStatus": "Active"
              }
            },
            "self": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930/socialTokens/bcea58df-2fe2-4997-bbff-5d7dc291181a",
            "id": "bcea58df-2fe2-4997-bbff-5d7dc291181a"
          }
        ],
        "ebillServiceActivationType": "None",
        "payeeLogoGeneric": false,
        "modifiableFields": [
          "Nickname",
          "Category",
          "AccountTokens",
          "SocialTokens"
        ],
        "status": "Active",
        "legacyPayeeId": "3",
        "self": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930",
        "id": "2dbd4a1d-b0f7-4dfa-838d-c240373b9930"
      },
      {
        "name": "Jane Smith",
        "nickname": "Jane",
        "category": "Friends",
        "contactPhoneNumber": "614-233-4532",
        "automaticTransactionUris": [
          "/api/v1/me/automaticTransactions/d64188e8-785b-467b-928b-1ed7e4eec7fd",
          "/api/v1/me/automaticTransactions/9eca59c9-5fad-47f8-8e9e-30962d902a1f"
        ],
        "reminderModelUri": "/api/v1/me/payees/12f74a8c-fb56-4a09-9b38-f799c383b5f4/reminderModel",
        "lastUsedFundingAccountUri": "/api/v1/me/bankAccounts/2d0847c4-0979-43eb-9336-c11e651b589b",
        "socialTokens": [
          {
            "socialToken": {
              "value": "jane.smith@fiserv.com",
              "type": "Email"
            },
            "self": "/api/v1/me/payees/12f74a8c-fb56-4a09-9b38-f799c383b5f4/socialTokens/b7dda3c2-b339-4601-bb5a-cc9de97cc0bc",
            "id": "b7dda3c2-b339-4601-bb5a-cc9de97cc0bc"
          },
          {
            "socialToken": {
              "value": "6142334532",
              "type": "Phone"
            },
            "self": "/api/v1/me/payees/12f74a8c-fb56-4a09-9b38-f799c383b5f4/socialTokens/d8cf4d48-0c54-4afd-b520-c862fd60a675",
            "id": "d8cf4d48-0c54-4afd-b520-c862fd60a675"
          }
        ],
        "ebillServiceActivationType": "None",
        "payeeLogoGeneric": false,
        "modifiableFields": [
          "Nickname",
          "Category",
          "AccountTokens",
          "SocialTokens"
        ],
        "status": "Active",
        "source": "BillServiceProvider",
        "legacyPayeeId": "4",
        "self": "/api/v1/me/payees/12f74a8c-fb56-4a09-9b38-f799c383b5f4",
        "id": "12f74a8c-fb56-4a09-9b38-f799c383b5f4"
      }
    ]
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    post:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Add Payee
      x-child-product-name: Payees
      summary: Creates a new payee using the given payee object
      operationId: Post
      parameters:
        - name: overrideAddressValidation
          in: query
          schema:
            type: boolean
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PayeeAddInput'
            example: {
  "payeeInfo": {
    "name": "John Smith",
    "nickname": "John",
    "accountNumber": "4456987968",
    "contactPhoneNumber": "614-555-1245",
    "address": {
      "address1": "6000 Perimeter Drive",
      "address2": "Mailbox 1034",
      "city": "Dublin",
      "state": "OH",
      "zipCode": "43017"
    },
    "socialTokens": [
      {
        "value": "test@fiserv.com",
        "type": "Email"
      },
      {
        "value": "6145551212",
        "type": "Phone"
      }
    ],
    "accountTokens": [
      {
        "account": {
          "routingTransitNumber": "0044100014",
          "accountType": "Checking",
          "accountNumber": "5646543213"
        }
      }
    ]
  }
}
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeAddInput'
            example: {
  "payeeInfo": {
    "name": "John Smith",
    "nickname": "John",
    "accountNumber": "4456987968",
    "contactPhoneNumber": "614-555-1245",
    "address": {
      "address1": "6000 Perimeter Drive",
      "address2": "Mailbox 1034",
      "city": "Dublin",
      "state": "OH",
      "zipCode": "43017"
    },
    "socialTokens": [
      {
        "value": "test@fiserv.com",
        "type": "Email"
      },
      {
        "value": "6145551212",
        "type": "Phone"
      }
    ],
    "accountTokens": [
      {
        "account": {
          "routingTransitNumber": "0044100014",
          "accountType": "Checking",
          "accountNumber": "5646543213"
        }
      }
    ]
  }
}
          text/json:
            schema:
              $ref: '#/components/schemas/PayeeAddInput'
            example: {
  "payeeInfo": {
    "name": "John Smith",
    "nickname": "John",
    "accountNumber": "4456987968",
    "contactPhoneNumber": "614-555-1245",
    "address": {
      "address1": "6000 Perimeter Drive",
      "address2": "Mailbox 1034",
      "city": "Dublin",
      "state": "OH",
      "zipCode": "43017"
    },
    "socialTokens": [
      {
        "value": "test@fiserv.com",
        "type": "Email"
      },
      {
        "value": "6145551212",
        "type": "Phone"
      }
    ],
    "accountTokens": [
      {
        "account": {
          "routingTransitNumber": "0044100014",
          "accountType": "Checking",
          "accountNumber": "5646543213"
        }
      }
    ]
  }
}
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayeeAddInput'
            example: {
  "payeeInfo": {
    "name": "John Smith",
    "nickname": "John",
    "accountNumber": "4456987968",
    "contactPhoneNumber": "614-555-1245",
    "address": {
      "address1": "6000 Perimeter Drive",
      "address2": "Mailbox 1034",
      "city": "Dublin",
      "state": "OH",
      "zipCode": "43017"
    },
    "socialTokens": [
      {
        "value": "test@fiserv.com",
        "type": "Email"
      },
      {
        "value": "6145551212",
        "type": "Phone"
      }
    ],
    "accountTokens": [
      {
        "account": {
          "routingTransitNumber": "0044100014",
          "accountType": "Checking",
          "accountNumber": "5646543213"
        }
      }
    ]
  }
}
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseModelIpsResponse'
              example: {
  "data": {
    "self": "api/v1/me/payees/6d0e1fb3c8954e21b225d5513d91d080",
    "id": "6d0e1fb3c8954e21b225d5513d91d080"
  },
  "result": {
    "success": true
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsResponse'
              example: {
  "data": {
    "self": "api/v1/me/payees/6d0e1fb3c8954e21b225d5513d91d080",
    "id": "6d0e1fb3c8954e21b225d5513d91d080"
  },
  "result": {
    "success": true
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsResponse'
              example: {
  "data": {
    "self": "api/v1/me/payees/6d0e1fb3c8954e21b225d5513d91d080",
    "id": "6d0e1fb3c8954e21b225d5513d91d080"
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/payees/{payeeId}':
    get:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Get Payee
      x-child-product-name: Payees
      operationId: Get
      parameters:
        - name: payeeId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeIpsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    delete:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Delete Payee
      x-child-product-name: Payees
      summary: Delete payee from users payee list
      operationId: Delete
      parameters:
        - name: payeeId
          in: path
          description: CommonId of the payee
          required: true
          schema:
            type: string
            description: CommonId of the payee
            nullable: true
        - name: cancelPendingTransactions
          in: query
          description: Cancel all pending payments associated with a payee
          schema:
            type: boolean
            description: Cancel all pending payments associated with a payee
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    patch:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Modify Payee
      x-child-product-name: Payees
      operationId: Patch
      parameters:
        - name: payeeId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: modifyPendingPayments
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchPayeeInfo'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPayeeInfo'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/PatchPayeeInfo'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchPayeeInfo'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/payees/{id}/ebillCapability':
    get:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Get Ebill Capability
      x-child-product-name: Payees
      operationId: EbillCapabilityGet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EbillCapabilityIpsResponse'
              example: {
  "data": {
    "billerName": "Biller AT&T",
    "billerLogoUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/billerLogoUrl.gif",
    "billerSiteUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/billerSiteUrl.gif",
    "billerThumbnailImageUrl": "https://test.www.portal1.mybills.com/52k-static/generic/images/billerThumbnailImageUrl.gif",
    "paperSuppressionOptions": [
      {
        "option": "DualDelivery",
        "termsText": "DualDelivery TermsText",
        "termsUrl": "http://www.fiserv.com",
        "isEmbedded": false
      },
      {
        "option": "PaperSuppression",
        "termsText": "PaperSuppression TermsText",
        "termsUrl": "http://www.fiserv.com",
        "isEmbedded": true
      },
      {
        "option": "Trial",
        "termsText": "Trial TermsText",
        "termsUrl": "http://www.fiserv.com",
        "isEmbedded": false
      }
    ],
    "preAuthTokens": [
      {
        "name": "Home Phone Number",
        "value": "9812351829",
        "regularExpression": "^[1-9]\\d{9}$"
      },
      {
        "name": "Date of Birth",
        "value": "1988-05-31",
        "regularExpression": "^([0-2][0-9]|(3)[0-1])(\\-)(((0)[0-9])|((1)[0-2]))(\\-)\\d{4}$"
      },
      {
        "name": "Last Name",
        "value": "John",
        "regularExpression": "^[a-zA-Z][a-zA-Z0-9_(){}&@!+#.$,%*-]*"
      },
      {
        "name": "Email Address",
        "value": "subcriber@fiserv.com",
        "regularExpression": "^([_+A-Za-z0-9]+((\\.|\\-)[_+A-Za-z0-9]+)*@[A-Za-z0-9]+((\\.|\\-)[A-Za-z0-9]+)*(\\.[A-Za-z]{2,8}))$"
      },
      {
        "name": "Mother’s Maiden Name",
        "value": "Rick",
        "regularExpression": "^[a-zA-Z][a-zA-Z0-9_(){}&@!+#.$,%*-]*"
      },
      {
        "name": "Social Security Number",
        "value": "2323232323",
        "regularExpression": "^[1-9]\\d{8}$"
      },
      {
        "name": "Zip Code",
        "value": "43017",
        "regularExpression": " ^(\\d{5}|\\d{9}|\\d{11})$"
      }
    ],
    "serviceAddressRequired": true,
    "serviceAddress": {
      "address1": "6000 Perimeter Drive",
      "address2": "Mailbox 1034",
      "city": "Dublin",
      "state": "OH",
      "zipCode": "43017"
    },
    "trialPeriodDays": 0,
    "accountNumberEditable": true,
    "accountNumberHelpText": "AccountNumber HelpText",
    "self": "/api/v1/me/payees/014c0a33-72d3-49d4-885c-347857d1ff44/ebillCapability",
    "id": "014c0a33-72d3-49d4-885c-347857d1ff44"
  },
  "result": {
    "success": true,
    "resultInfo": []
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/payees/{id}/ebillService':
    post:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Activate eBill Service
      x-child-product-name: Payees
      summary: Activate ebill service for a payee
      operationId: PostEbillService
      parameters:
        - name: id
          in: path
          description: ID of the payee
          required: true
          schema:
            type: string
            description: ID of the payee
            nullable: true
      requestBody:
        description: Input for ebill service activation
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EbillServiceActivateInput'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/EbillServiceActivateInput'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/EbillServiceActivateInput'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/EbillServiceActivateInput'
            example: "112233445566"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EbillServiceActivateOutputIpsResponse'
              example: {
  "data": {
    "activationState": "Accepted",
    "activationStateMessage": "Success",
    "self": "/api/v1/me/payees/a4989bab-384c-4091-bd07-545fe136b313/ebillService",
    "id": "a4989bab-384c-4091-bd07-545fe136b313"
  },
  "result": {
    "success": true,
    "resultInfo": []
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/EbillServiceActivateOutputIpsResponse'
              example: {
  "data": {
    "activationState": "Accepted",
    "activationStateMessage": "Success",
    "self": "/api/v1/me/payees/a4989bab-384c-4091-bd07-545fe136b313/ebillService",
    "id": "a4989bab-384c-4091-bd07-545fe136b313"
  },
  "result": {
    "success": true,
    "resultInfo": []
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/EbillServiceActivateOutputIpsResponse'
              example: {
  "data": {
    "activationState": "Accepted",
    "activationStateMessage": "Success",
    "self": "/api/v1/me/payees/a4989bab-384c-4091-bd07-545fe136b313/ebillService",
    "id": "a4989bab-384c-4091-bd07-545fe136b313"
  },
  "result": {
    "success": true,
    "resultInfo": []
  }
}
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    delete:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Stop eBill Service
      x-child-product-name: Payees
      summary: Delete Ebill service of a payee
      operationId: DeleteEbillService
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    get:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Get eBill Service Details
      x-child-product-name: Payees
      operationId: GetEbillService
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EbillAccountDetailIpsResponse'
              example: {
  "autoActivationType": "EZActivation",
  "activationType": "AutoActivation",
  "billerThumbnailImageUrl": "/api/v1/me/payees/ThumbnailImage1.jpg",
  "billTransactionScheduleEligible": true,
  "emailAddressShare": true,
  "firstEbillReceived": true,
  "name": {
    "first": "John",
    "last": "Smith"
  },
  "isTrialPeriod": true,
  "paperProcessingStatus": "PaperBillsStillSent",
  "paperSuppressionIncentiveMessage": "PaperSuppressionIncentiveMessage",
  "paperSuppressionTermsUrl": "/api/v1/me/payees/f45da2f55efa402e88a14259438adf00/ebillService/paperSuppressionTerms",
  "promptPaperSuppression": true,
  "serviceAddress": {
    "address1": "6000 Perimeter Drive",
    "address2": "Mailbox 1034",
    "city": "Dublin",
    "state": "OH",
    "zipCode": "43017"
  },
  "serviceBusinessName": "Biller AT&T",
  "serviceDaytimePhoneNumber": "85565465464",
  "serviceEveningPhoneNumber": "85565465464",
  "serviceHolderType": "Business",
  "status": "Active",
  "trialPeriodEnd": "2022-02-03",
  "trialPeriodStart": "2022-01-27",
  "transactionScheduleTypesSupported": [
    "AccountBalance",
    "AmountDue"
  ],
  "self": "/api/v1/me/payees/f45da2f55efa402e88a14259438adf00/ebillService"
}
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/payees/{payeeId}/payeeAccountNumber':
    get:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Get Account Number
      x-child-product-name: Payees
      operationId: GetPayeeAccountNumber
      parameters:
        - name: payeeId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringIpsResponse'
              example: "0fcc7b1f-82c3-46aa-a421-03cf4423ece9"
            application/json:
              schema:
                $ref: '#/components/schemas/StringIpsResponse'
              example: "0fcc7b1f-82c3-46aa-a421-03cf4423ece9"
            text/json:
              schema:
                $ref: '#/components/schemas/StringIpsResponse'
              example: "0fcc7b1f-82c3-46aa-a421-03cf4423ece9"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/payees/{id}/ebillService/SuppressPaper':
    patch:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Modify Paper Suppression
      x-child-product-name: Payees
      operationId: PatchEbillServiceSuppressPaper
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EbillServiceSuppressPaperInput'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/EbillServiceSuppressPaperInput'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/EbillServiceSuppressPaperInput'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/EbillServiceSuppressPaperInput'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/payees/{id}/automaticTransactionOptions':
    get:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Get Automatic Transaction Options for Payee
      x-child-product-name: Payees
      operationId: GetAutomationTransactionOptions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticTransactionOptionsIpsResponse'
              example: {
  "billTransactionScheduleActive": true,
  "billTransactionScheduleCapable": true,
  "billTransactionScheduleTypesSupported": {
    "transactionTypes": [
      "FixedAmount",
      "AmountDue",
      "MinimumAmountDue",
      "AccountBalance"
    ],
    "transactionInitiationTypes": [
      "DueDate",
      "UponReceipt",
      "DaysBeforeDueDate"
    ],
    "eligibleFundingAccounts": [
      {
        "fundingAccountUri": "/api/v1/me/bankAccounts/2dfc889b-daaa-43dc-ad13-3cca29896b34",
        "maxAmount": 345.0,
        "minAmount": 20.0
      }
    ]
  },
  "recurringTransactionScheduleActive": true,
  "recurringTransactionScheduleCapable": true,
  "recurringTransactionScheduleTypesSupported": {
    "frequency": [
      "Weekly",
      "Every2Weeks",
      "Every4Weeks",
      "TwiceAMonth",
      "Monthly",
      "Every2Months",
      "Every3Months",
      "Every4Months",
      "Every6Months",
      "Annually"
    ],
    "duration": [
      "UntilSubscriberCancels",
      "XNumberOfPayments",
      "SpecificEndDate",
      "Empty"
    ],
    "eligibleFundingAccounts": [
      {
        "earliestInitiationDate": "2018-09-15",
        "fundingAccountUri": "/api/v1/me/bankAccounts/fcdd4d25-c838-4647-bd87-df154bebdf2c",
        "maxAmount": 245.0,
        "minAmount": 10.0
      }
    ]
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/visa/payees:
    get:
      tags:
        - Payees
      x-group-name: Payees
      x-proxy-name: Get Visa Payees
      x-child-product-name: Payees
      operationId: GetVisaPayees
      parameters:
        - name: returnInactivePayees
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeListIpsResponse'
              example: {
  "data": {
    "payees": [
      {
        "name": "Verizon Wireless",
        "nickname": "Verizon",
        "maskedAccountNumber": "****7890",
        "unmaskedAccountNumberUri": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/payeeAccountNumber",
        "category": "Utility",
        "contactPhoneNumber": "614-555-1212",
        "merchantUri": "/api/v1/merchants/97899985-b082-47d0-9b9e-e656f8836898",
        "automaticTransactionUris": [
          "/api/v1/me/automaticTransactions/4ed2c8b9-3baa-4f4c-9176-aa7fbc594a85",
          "/api/v1/me/automaticTransactions/674b3219-fbca-4013-a65a-fe8f393826d9"
        ],
        "address": {
          "address1": "6000 Perimeter Drive",
          "address2": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43017"
        },
        "lastUsedFundingAccountUri": "/api/v1/me/bankAccounts/f935e8e2-3da2-4db4-b438-2e86d24ae205",
        "socialTokens": [
          {
            "socialToken": {
              "value": "test@fiserv.com",
              "type": "Email"
            },
            "self": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/socialTokens/46676f71-605b-4429-934a-a0622414b214",
            "id": "46676f71-605b-4429-934a-a0622414b214"
          },
          {
            "socialToken": {
              "value": "6145551212",
              "type": "Phone"
            },
            "self": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/socialTokens/8924e98f-49a9-483c-8f61-46fb20688dfe",
            "id": "8924e98f-49a9-483c-8f61-46fb20688dfe"
          }
        ],
        "accountTokens": [
          {
            "accountToken": {
              "account": {
                "accountType": "Checking",
                "maskedAccountNumber": "***5309",
                "isPreferred": false,
                "isBusiness": false,
                "confirmationStatus": "Confirmed",
                "accountStatus": "Active"
              }
            },
            "self": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/socialTokens/6ff1075a-75c8-4daa-9432-e2632f9f6959",
            "id": "6ff1075a-75c8-4daa-9432-e2632f9f6959"
          }
        ],
        "ebillServiceActivationUri": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/ebillCapability",
        "ebillServiceActivationType": "Lite",
        "ebillServiceUri": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add/ebillService",
        "payeeLogoUrl": "https://payeelogos-dev.apps.fog.onefiserv.net/499.png",
        "payeeLogoGeneric": true,
        "modifiableFields": [
          "Nickname",
          "Category"
        ],
        "status": "Active",
        "legacyPayeeId": "1",
        "self": "/api/v1/me/payees/08957bb7-303f-4863-b637-3891b7200add",
        "id": "08957bb7-303f-4863-b637-3891b7200add"
      },
      {
        "name": "Comcast",
        "nickname": "Comcast",
        "maskedAccountNumber": "****7890",
        "unmaskedAccountNumberUri": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/payeeAccountNumber",
        "category": "Utility",
        "contactPhoneNumber": "614-555-1212",
        "merchantUri": "/api/v1/merchants/2cf95d9e-21ed-4aac-bfbf-9b131ad44020",
        "automaticTransactionUris": [
          "/api/v1/me/automaticTransactions/ca73c2d9-1729-4123-96da-b09f4979c088",
          "/api/v1/me/automaticTransactions/6fe11e78-9dfd-4eb3-aaf7-5098342336ef"
        ],
        "reminderModelUri": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/reminderModel",
        "address": {
          "address1": "6000 Perimeter Drive",
          "address2": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43017"
        },
        "lastUsedFundingAccountUri": "/api/v1/me/bankAccounts/a3e86450-feaa-40e2-8b71-a481bccf0f2e",
        "socialTokens": [
          {
            "socialToken": {
              "value": "test@fiserv.com",
              "type": "Email"
            },
            "self": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/socialTokens/1f893559-5471-4ef3-a5d3-cf255ce74f62",
            "id": "1f893559-5471-4ef3-a5d3-cf255ce74f62"
          },
          {
            "socialToken": {
              "value": "6145551212",
              "type": "Phone"
            },
            "self": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/socialTokens/0f0516bc-2083-450b-978b-09b79ec1dc21",
            "id": "0f0516bc-2083-450b-978b-09b79ec1dc21"
          }
        ],
        "accountTokens": [
          {
            "accountToken": {
              "account": {
                "accountType": "Savings",
                "maskedAccountNumber": "***4444",
                "isPreferred": false,
                "isBusiness": false,
                "confirmationStatus": "Confirmed",
                "accountStatus": "Active"
              }
            },
            "self": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/socialTokens/b00e234e-0e50-4d3c-8029-754df0c0c4c5",
            "id": "b00e234e-0e50-4d3c-8029-754df0c0c4c5"
          }
        ],
        "ebillServiceActivationUri": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/ebillCapability",
        "ebillServiceActivationType": "Full",
        "ebillServiceUri": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c/ebillService",
        "payeeLogoUrl": "https://payeelogos-dev.apps.fog.onefiserv.net/499.png",
        "payeeLogoGeneric": true,
        "modifiableFields": [
          "Nickname",
          "Category"
        ],
        "status": "Active",
        "legacyPayeeId": "2",
        "self": "/api/v1/me/payees/5057f8dd-ebb0-4359-9eeb-b003283af89c",
        "id": "5057f8dd-ebb0-4359-9eeb-b003283af89c"
      },
      {
        "name": "John Smith",
        "nickname": "John",
        "category": "Friends",
        "contactPhoneNumber": "614-555-1212",
        "automaticTransactionUris": [
          "/api/v1/me/automaticTransactions/b38ca08b-8997-4f2c-b716-a67a0c8472ac",
          "/api/v1/me/automaticTransactions/5b996fae-2762-4a38-a9a1-64c8dba6dab6"
        ],
        "reminderModelUri": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930/reminderModel",
        "lastUsedFundingAccountUri": "/api/v1/me/bankAccounts/ba9d16a0-1334-4017-9bf0-4fec7a168945",
        "socialTokens": [
          {
            "socialToken": {
              "value": "john.smith@fiserv.com",
              "type": "Email"
            },
            "self": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930/socialTokens/bf38cd8d-42f4-4090-a35a-27f78a919e6d",
            "id": "bf38cd8d-42f4-4090-a35a-27f78a919e6d"
          },
          {
            "socialToken": {
              "value": "6145551212",
              "type": "Phone"
            },
            "self": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930/socialTokens/cb882cf5-9312-4769-8165-0de007c29bac",
            "id": "cb882cf5-9312-4769-8165-0de007c29bac"
          }
        ],
        "accountTokens": [
          {
            "accountToken": {
              "account": {
                "accountType": "Savings",
                "maskedAccountNumber": "***4444",
                "isPreferred": false,
                "unmaskedAccountNumberUri": "/api/v1/me/bankAccounts/bcea58df-2fe2-4997-bbff-5d7dc291181a/fullAccountNumber",
                "isBusiness": false,
                "confirmationStatus": "Confirmed",
                "accountStatus": "Active"
              }
            },
            "self": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930/socialTokens/bcea58df-2fe2-4997-bbff-5d7dc291181a",
            "id": "bcea58df-2fe2-4997-bbff-5d7dc291181a"
          }
        ],
        "ebillServiceActivationType": "None",
        "payeeLogoGeneric": false,
        "modifiableFields": [
          "Nickname",
          "Category",
          "AccountTokens",
          "SocialTokens"
        ],
        "status": "Active",
        "legacyPayeeId": "3",
        "self": "/api/v1/me/payees/2dbd4a1d-b0f7-4dfa-838d-c240373b9930",
        "id": "2dbd4a1d-b0f7-4dfa-838d-c240373b9930"
      },
      {
        "name": "Jane Smith",
        "nickname": "Jane",
        "category": "Friends",
        "contactPhoneNumber": "614-233-4532",
        "automaticTransactionUris": [
          "/api/v1/me/automaticTransactions/d64188e8-785b-467b-928b-1ed7e4eec7fd",
          "/api/v1/me/automaticTransactions/9eca59c9-5fad-47f8-8e9e-30962d902a1f"
        ],
        "reminderModelUri": "/api/v1/me/payees/12f74a8c-fb56-4a09-9b38-f799c383b5f4/reminderModel",
        "lastUsedFundingAccountUri": "/api/v1/me/bankAccounts/2d0847c4-0979-43eb-9336-c11e651b589b",
        "socialTokens": [
          {
            "socialToken": {
              "value": "jane.smith@fiserv.com",
              "type": "Email"
            },
            "self": "/api/v1/me/payees/12f74a8c-fb56-4a09-9b38-f799c383b5f4/socialTokens/b7dda3c2-b339-4601-bb5a-cc9de97cc0bc",
            "id": "b7dda3c2-b339-4601-bb5a-cc9de97cc0bc"
          },
          {
            "socialToken": {
              "value": "6142334532",
              "type": "Phone"
            },
            "self": "/api/v1/me/payees/12f74a8c-fb56-4a09-9b38-f799c383b5f4/socialTokens/d8cf4d48-0c54-4afd-b520-c862fd60a675",
            "id": "d8cf4d48-0c54-4afd-b520-c862fd60a675"
          }
        ],
        "ebillServiceActivationType": "None",
        "payeeLogoGeneric": false,
        "modifiableFields": [
          "Nickname",
          "Category",
          "AccountTokens",
          "SocialTokens"
        ],
        "status": "Active",
        "source": "BillServiceProvider",
        "legacyPayeeId": "4",
        "self": "/api/v1/me/payees/12f74a8c-fb56-4a09-9b38-f799c383b5f4",
        "id": "12f74a8c-fb56-4a09-9b38-f799c383b5f4"
      }
    ]
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/PotentialPayees:
    get:
      tags:
        - PotentialPayees
      x-group-name: PotentialPayees
      x-proxy-name: Get Potential Payees
      x-child-product-name: PotentialPayees
      operationId: GetPotentialPayees
      parameters:
        - name: excludeDormantAccounts
          in: query
          schema:
            type: boolean
        - name: search
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PotentialPayeeListIpsResponse'
              example: {
  "data": {
    "potentialPayees": [
      {
        "maskedAccountNumber": "*******1234",
        "unmaskedAccountNumberUri": "/api/v1/me/potentialpayees/6235e0fe-b837-41ab-85d5-fa6211fa306a/payeeAccountNumber",
        "additionalInfoRequired": true,
        "merchantData": {
          "merchantName": "AT&T",
          "merchantLogoUrl": "https://www.att.com",
          "merchantUri": "/api/v1/merchants/60"
        },
        "verificationTokens": [
          {
            "description": "Account Number",
            "value": "14582514751234",
            "type": "Number"
          }
        ],
        "self": "/api/v1/me/potentialpayees/6235e0fe-b837-41ab-85d5-fa6211fa306a",
        "id": "6235e0fe-b837-41ab-85d5-fa6211fa306a"
      },
      {
        "maskedAccountNumber": "*******1234",
        "unmaskedAccountNumberUri": "/api/v1/me/potentialpayees/6235e0fe-b837-41ab-85d5-fa6211fa306a/payeeAccountNumber",
        "additionalInfoRequired": true,
        "merchantData": {
          "merchantName": "Kentucky Utilities",
          "merchantLogoUrl": "https://lge-ku.com/",
          "merchantUri": "/api/v1/merchants/24"
        },
        "verificationTokens": [
          {
            "description": "LastBillAmount",
            "value": "$100.34",
            "type": "Currency"
          }
        ],
        "dormantAccount": true,
        "self": "/api/v1/me/potentialpayees/5ae56b80-c22a-4438-bbc0-c7e9daaca8ee",
        "id": "6235e0fe-b837-41ab-85d5-fa6211fa306a"
      }
    ]
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/PotentialPayees/{id}':
    get:
      tags:
        - PotentialPayees
      x-group-name: PotentialPayees
      x-proxy-name: Get Potential Payee
      x-child-product-name: PotentialPayees
      operationId: GetPotentialPayeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PotentialPayeeIpsResponse'
              example: {
  "data": {
    "potentialPayees": [
      {
        "maskedAccountNumber": "*******1234",
        "unmaskedAccountNumberUri": "/api/v1/me/potentialpayees/6235e0fe-b837-41ab-85d5-fa6211fa306a/payeeAccountNumber",
        "additionalInfoRequired": true,
        "merchantData": {
          "merchantName": "AT&T",
          "merchantLogoUrl": "https://www.att.com",
          "merchantUri": "/api/v1/merchants/60"
        },
        "verificationTokens": [
          {
            "description": "Account Number",
            "value": "14582514751234",
            "type": "Number"
          }
        ],
        "self": "/api/v1/me/potentialpayees/6235e0fe-b837-41ab-85d5-fa6211fa306a",
        "id": "6235e0fe-b837-41ab-85d5-fa6211fa306a"
      },
      {
        "maskedAccountNumber": "*******1234",
        "unmaskedAccountNumberUri": "/api/v1/me/potentialpayees/6235e0fe-b837-41ab-85d5-fa6211fa306a/payeeAccountNumber",
        "additionalInfoRequired": true,
        "merchantData": {
          "merchantName": "Kentucky Utilities",
          "merchantLogoUrl": "https://lge-ku.com/",
          "merchantUri": "/api/v1/merchants/24"
        },
        "verificationTokens": [
          {
            "description": "LastBillAmount",
            "value": "$100.34",
            "type": "Currency"
          }
        ],
        "dormantAccount": true,
        "self": "/api/v1/me/potentialpayees/5ae56b80-c22a-4438-bbc0-c7e9daaca8ee",
        "id": "6235e0fe-b837-41ab-85d5-fa6211fa306a"
      }
    ]
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/PotentialPayees/{id}/Verify':
    put:
      tags:
        - PotentialPayees
      x-group-name: PotentialPayees
      x-proxy-name: Add Potential Payees
      x-child-product-name: PotentialPayees
      operationId: PutPotentialPayee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VerificationTokenList'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationTokenList'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/VerificationTokenList'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerificationTokenList'
            example: "112233445566"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationResponseIpsResponse'
              example: {
  "data": {
    "payeeUri": "/api/v1/me/Payees/8ff4267b-9958-454f-96d2-ff5d08002f2b",
    "maskedAccountNumber": "**********5309",
    "unmaskedAccountNumberUri": "/api/v1/me/payees/37f394a5-b18c-46fa-9947-a4251be4b6bf/payeeAccountNumber",
    "additionalInfoRequired": true,
    "merchantData": {
      "merchantName": "Bon Ton",
      "merchantLogoUrl": "/api/v1/me/MerchantLogos/54",
      "merchantUri": "/api/v1/merchants/54",
      "legacyMerchantId": "7125"
    },
    "verificationTokens": [
      {
        "description": "LastBillAmount",
        "value": "$90.99",
        "type": "Currency"
      }
    ],
    "verificationUri": "/api/v1/me/PotentialPayees/37f394a5-b18c-46fa-9947-a4251be4b6bf/Verify",
    "legacyPayeeId": "7124",
    "self": "/api/v1/me/PotentialPayees/Verify/37f394a5-b18c-46fa-9947-a4251be4b6bf",
    "id": "37f394a5-b18c-46fa-9947-a4251be4b6bf"
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/PotentialPayees/{id}/dismiss':
    put:
      tags:
        - PotentialPayees
      x-group-name: PotentialPayees
      x-proxy-name: Dismiss Potential Payees
      x-child-product-name: PotentialPayees
      operationId: DismissPotentialPayee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/PotentialPayees/{id}/payeeAccountNumber':
    get:
      tags:
        - PotentialPayees
      x-group-name: PotentialPayees
      x-proxy-name: Get Potential Payee Account Number
      x-child-product-name: PotentialPayees
      operationId: GetPayeeAccountNumber
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringIpsResponse'
              example: {
  "data": "267185cb-18a9-4b4b-afa1-1ccf7317635d",
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/PotentialPayees/eligibility:
    get:
      tags:
        - PotentialPayees
      x-group-name: PotentialPayees
      x-proxy-name: Get Potential Payee Eligibility
      x-child-product-name: PotentialPayees
      summary: Return the bill discovery user eligibility.
      operationId: GetUserEligibility
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillDiscoveryUserEligibilityIpsResponse'
              example: {
  "data": {
    "creditReportEligible": true,
    "billServiceProviderEligible": true,
    "outstandingPotentialPayeesCount": 12
  },
  "result": {
    "success": true,
    "resultInfo": []
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/ToDos:
    get:
      tags:
        - ToDos
      x-group-name: ToDos
      x-proxy-name: Get ToDos
      x-child-product-name: ToDos
      summary: Get todos
      operationId: Get
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDoIEnumerableIpsResponse'
              example: [
  {
    "toDoType": "UnpaidBill",
    "toDoDetailUri": "/api/v1/me/bills/7e6f5225-3420-43ae-925e-fc4d6ea852d1",
    "payeeUri": "/api/v1/me/payees/4b9ba60c-f23b-492e-8c43-6eac1b45937d",
    "actionDate": "2022-02-26",
    "amount": 100.0,
    "maskedAccountNumber": "*******1586",
    "description": "AT&T",
    "self": "/api/v1/me/todos/7e6f5225-3420-43ae-925e-fc4d6ea852d1",
    "id": "7e6f5225-3420-43ae-925e-fc4d6ea852d1"
  },
  {
    "toDoType": "UnpaidBill",
    "toDoDetailUri": "/api/v1/me/bills/56ffc7f4-0a03-4b05-be01-288329df248f",
    "payeeUri": "/api/v1/me/payees/32a46609-cef0-48ee-8569-e0e780b7b033",
    "actionDate": "2022-02-21",
    "amount": 56.89,
    "maskedAccountNumber": "*******7586",
    "description": "T-Mobile",
    "self": "/api/v1/me/todos/56ffc7f4-0a03-4b05-be01-288329df248f",
    "id": "56ffc7f4-0a03-4b05-be01-288329df248f"
  },
  {
    "toDoType": "UnpaidBill",
    "toDoDetailUri": "/api/v1/me/bills/824fbf7f-6a7e-4b28-8265-502bbeec22a2",
    "payeeUri": "/api/v1/me/payees/675118ad-bf39-4f6a-b323-0a951269d438",
    "actionDate": "2022-02-01",
    "amount": 88.90,
    "maskedAccountNumber": "*******6586",
    "description": "Apple",
    "self": "/api/v1/me/todos/824fbf7f-6a7e-4b28-8265-502bbeec22a2",
    "id": "824fbf7f-6a7e-4b28-8265-502bbeec22a2"
  },
  {
    "toDoType": "PotentialPayee",
    "toDoDetailUri": "/api/v1/me/potentialPayees/7aba97a9-b4ef-43e1-8713-3a6e2c161d14",
    "verificationRequired": true,
    "actionDate": "2022-02-01",
    "maskedAccountNumber": "*******4586",
    "description": "Bon Ton",
    "self": "/api/v1/me/todos/7aba97a9-b4ef-43e1-8713-3a6e2c161d14",
    "id": "7aba97a9-b4ef-43e1-8713-3a6e2c161d14"
  },
  {
    "toDoType": "UnverifiedAccount",
    "toDoDetailUri": "/api/v1/me/bankAccounts/7aba97a9-b4ef-43e1-8713-3a6e2c161d14",
    "verificationRequired": true,
    "maskedAccountNumber": "*******1234",
    "description": "Unverified account",
    "self": "/api/v1/me/todos/7aba97a9-b4ef-43e1-8713-3a6e2c161d14",
    "id": "7aba97a9-b4ef-43e1-8713-3a6e2c161d14"
  }
]
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/ToDos/{id}':
    get:
      tags:
        - ToDos
      x-group-name: ToDos
      x-proxy-name: Get ToDo
      x-child-product-name: ToDos
      summary: Get single todo
      operationId: Get
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDoIpsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/ToDos/{id}/dismiss':
    patch:
      tags:
        - ToDos
      x-group-name: ToDos
      x-proxy-name: Dismiss ToDo
      x-child-product-name: ToDos
      summary: Dismiss individual Todo
      operationId: Patch
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/transactionCalendar:
    get:
      tags:
        - TransactionCalendar
      x-group-name: TransactionCalendar
      x-proxy-name: Get Transaction Calendar
      x-child-product-name: TransactionCalendar
      operationId: Get
      parameters:
        - name: transactionDestinationUri
          in: query
          schema:
            type: array
            items:
              type: string
              format: uri
            nullable: true
        - name: fundingAccountUri
          in: query
          schema:
            type: string
            format: uri
            nullable: true
        - name: amount
          in: query
          schema:
            type: number
            format: double
            nullable: true
        - name: startDate
          in: query
          schema:
            type: string
            nullable: true
        - name: endDate
          in: query
          schema:
            type: string
            nullable: true
        - name: transactionUri
          in: query
          schema:
            type: string
            format: uri
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCalendarListIpsResponse'
              example: {
  "data": [
    {
      "deliveryDate": "2022-01-28",
      "transactionOptions": [
        {
          "additionalInfoRequired": [
            "OvernightAddress"
          ],
          "cutOffTime": "2022-01-27T23:42:07.1356994Z",
          "deliveryMethod": "Overnight",
          "fee": 9.95,
          "fundingAccountUri": "/api/v1/me/bankAccounts/13c3c3e93ebb4282b10d60478bab48d9",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": true,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        },
        {
          "debitDate": "2022-01-27",
          "cutOffTime": "2022-01-27T23:42:07.135745Z",
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/cardAccounts/1aa48a172f714034accab0f647af9f71",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": true,
          "maxAmount": 2500.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-01-29",
      "transactionOptions": [
        {
          "cutOffTime": "2022-01-28T02:42:07.1357516Z",
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/33b1fd7a9e2149949df8e50e337c1d6c",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-01-30",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/077f5c9d08f1423aa85b61835fc0065f",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-01-31",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/de13c156f3e5498397d4dddf83bcdb20",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-01",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/1973219c765a4fe195638d55ea2fb6d8",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-02",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/6efa0af3d2af4836ac6b3c0bf2548534",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-03",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/4996deb3a5694f408e59cab5577479e8",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-04",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/03a5dec63a784d60a86a6852949424c9",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-05",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/3facfe1369714bef8a1c7564f3a15676",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-06",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/bb0b9eff40a24e519b87a0c2a387d358",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-07",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/254d86e30a1b42ca9d082b93e90b678f",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-08",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/2ad5ce3c146e4a5fbbadfc5515d435e9",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-09",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/43d94ac688534929b0356a9f2397b9e4",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    },
    {
      "deliveryDate": "2022-02-10",
      "transactionOptions": [
        {
          "deliveryMethod": "Electronic",
          "fee": 0.0,
          "fundingAccountUri": "/api/v1/me/bankAccounts/381dc1225ba14afda9a668ebc5d1a2f7",
          "withdrawNow": true,
          "instantDelivery": true,
          "isPreferredDate": false,
          "maxAmount": 1000.0,
          "minAmount": 1.0
        }
      ]
    }
  ],
  "result": {
    "success": true,
    "resultInfo": []
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCalendarListIpsResponse'
  /api/v1/me/Transactions:
    post:
      tags:
        - Transactions
      x-group-name: Transactions
      x-proxy-name: Add a List of Transactions
      x-child-product-name: Transactions
      summary: Save a list of transactions
      operationId: PostTransaction
      parameters:
        - name: allowDuplicateTransaction
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
              nullable: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionOutputIpsListItemResponseListIpsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsListItemResponseListIpsResponse'
    get:
      tags:
        - Transactions
      x-group-name: Transactions
      x-proxy-name: Get a List of Transactions
      x-child-product-name: Transactions
      summary: Return a list of transactions
      operationId: GetTransactions
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: sort
          in: query
          schema:
            type: string
            nullable: true
        - name: start
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: payeeUri
          in: query
          schema:
            type: string
            format: uri
            nullable: true
        - name: fundingAccountUri
          in: query
          schema:
            type: string
            format: uri
            nullable: true
        - name: status
          in: query
          schema:
            type: string
            nullable: true
        - name: minAmount
          in: query
          schema:
            type: number
            format: double
            nullable: true
        - name: maxAmount
          in: query
          schema:
            type: number
            format: double
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListIpsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/visa/transactions:
    post:
      tags:
        - Transactions
      x-group-name: Transactions
      x-proxy-name: Add a Visa Transaction
      x-child-product-name: Transactions
      summary: Schedule a single immediate transaction
      operationId: PostVisaTransaction
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VisaTransaction'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VisaTransaction'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VisaTransaction'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VisaTransaction'
              nullable: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaTransactionOutputIpsListItemResponseListIpsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModelIpsListItemResponseListIpsResponse'
  '/api/v1/me/Transactions/{transactionId}/cancel':
    patch:
      tags:
        - Transactions
      x-group-name: Transactions
      x-proxy-name: Cancel Transaction
      x-child-product-name: Transactions
      operationId: CancelPatch
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/Transactions/{transactionId}':
    patch:
      tags:
        - Transactions
      x-group-name: Transactions
      x-proxy-name: Modify Transaction
      x-child-product-name: Transactions
      operationId: Patch
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TransactionModify'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionModify'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/TransactionModify'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/TransactionModify'
            example: "112233445566"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModifyOutputIpsResponse'
        '404':
          description: Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/completeIdentityVerification:
    post:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Verify User
      x-child-product-name: Users
      summary: Post Identity Verification
      operationId: CompleteIdentityVerification
      responses:
        '200':
          description: Success
  /api/v1/me:
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get User
      x-child-product-name: Users
      summary: Get user call.
      operationId: Get
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIpsResponse'
              example: {
  "userId": "8c86fe15-534c-4283-bd0b-463e13e650b9",
  "name": {
    "firstName": "John",
    "lastName": "Johnson",
    "middleName": "M",
    "nickname": "Johnny",
    "prefix": "Dr"
  },
  "businessName": "Johnson",
  "contactEndPoints": [
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Mobile",
        "value": "91-8694522121"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Day",
        "value": "8694522451"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Evening",
        "value": "91-8697822121"
      }
    },
    {
      "status": "Active",
      "endPointType": "Email",
      "email": {
        "value": "test@abc.com"
      }
    },
    {
      "status": "Active",
      "endPointType": "Address",
      "address": {
        "addressType": "USAddress",
        "usAddress": {
          "address1": "6000 Perimeter Drive",
          "address2": "Ste 3A",
          "address3": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43017"
        }
      }
    }
  ],
  "category": "VIP member",
  "sensitiveInformationUri": "/api/v1/me/SensitiveInformation",
  "timeZone": 5,
  "country": "US",
  "status": "Unspecified",
  "lastLoginDate": "2022-01-27T16:42:07.2843029-05:00",
  "languageCode": "EN",
  "languageCountry": "US",
  "locale": "EN-US",
  "newUser": true,
  "occupation": "Accountants",
  "modifiableFields": [
    "middleName",
    "lastName",
    "usAddress",
    "occupation"
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    patch:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Modify User
      x-child-product-name: Users
      summary: Patch D2C user.
      operationId: ModifyUser
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequest'
            example: {
  "name": {
    "firstName": "Joe",
    "lastName": "Jeffery",
    "middleName": "J",
    "nickname": "Johnny",
    "prefix": "Mr."
  },
  "contactEndPoints": [
    {
      "status": "Active",
      "endPointType": "Address",
      "address": {
        "addressType": "USAddress",
        "usAddress": {
          "address1": "6000 Perimeter Loop",
          "address2": "Ste 3A",
          "address3": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43217"
        }
      }
    },
    {
      "status": "Active",
      "endPointType": "Email",
      "email": {
        "value": "JoeJeffery@myhost.com"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Mobile",
        "value": "6145551212"
      }
    }
  ],
  "birthDate": "1963-09-30",
  "category": "NewUser",
  "identityValidationInformation": {
    "idType": "StateIssuedDriverLicense",
    "idNumber": "SV123123",
    "idIssuingState": "OH",
    "idIssuingCountry": "USA"
  },
  "locale": "EN-US",
  "occupation": null,
  "taxId": "614567890",
  "timeZone": null
}
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequest'
            example: {
  "name": {
    "firstName": "Joe",
    "lastName": "Jeffery",
    "middleName": "J",
    "nickname": "Johnny",
    "prefix": "Mr."
  },
  "contactEndPoints": [
    {
      "status": "Active",
      "endPointType": "Address",
      "address": {
        "addressType": "USAddress",
        "usAddress": {
          "address1": "6000 Perimeter Loop",
          "address2": "Ste 3A",
          "address3": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43217"
        }
      }
    },
    {
      "status": "Active",
      "endPointType": "Email",
      "email": {
        "value": "JoeJeffery@myhost.com"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Mobile",
        "value": "6145551212"
      }
    }
  ],
  "birthDate": "1963-09-30",
  "category": "NewUser",
  "identityValidationInformation": {
    "idType": "StateIssuedDriverLicense",
    "idNumber": "SV123123",
    "idIssuingState": "OH",
    "idIssuingCountry": "USA"
  },
  "locale": "EN-US",
  "occupation": null,
  "taxId": "614567890",
  "timeZone": null
}
          text/json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequest'
            example: {
  "name": {
    "firstName": "Joe",
    "lastName": "Jeffery",
    "middleName": "J",
    "nickname": "Johnny",
    "prefix": "Mr."
  },
  "contactEndPoints": [
    {
      "status": "Active",
      "endPointType": "Address",
      "address": {
        "addressType": "USAddress",
        "usAddress": {
          "address1": "6000 Perimeter Loop",
          "address2": "Ste 3A",
          "address3": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43217"
        }
      }
    },
    {
      "status": "Active",
      "endPointType": "Email",
      "email": {
        "value": "JoeJeffery@myhost.com"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Mobile",
        "value": "6145551212"
      }
    }
  ],
  "birthDate": "1963-09-30",
  "category": "NewUser",
  "identityValidationInformation": {
    "idType": "StateIssuedDriverLicense",
    "idNumber": "SV123123",
    "idIssuingState": "OH",
    "idIssuingCountry": "USA"
  },
  "locale": "EN-US",
  "occupation": null,
  "taxId": "614567890",
  "timeZone": null
}
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequest'
            example: {
  "name": {
    "firstName": "Joe",
    "lastName": "Jeffery",
    "middleName": "J",
    "nickname": "Johnny",
    "prefix": "Mr."
  },
  "contactEndPoints": [
    {
      "status": "Active",
      "endPointType": "Address",
      "address": {
        "addressType": "USAddress",
        "usAddress": {
          "address1": "6000 Perimeter Loop",
          "address2": "Ste 3A",
          "address3": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43217"
        }
      }
    },
    {
      "status": "Active",
      "endPointType": "Email",
      "email": {
        "value": "JoeJeffery@myhost.com"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Mobile",
        "value": "6145551212"
      }
    }
  ],
  "birthDate": "1963-09-30",
  "category": "NewUser",
  "identityValidationInformation": {
    "idType": "StateIssuedDriverLicense",
    "idNumber": "SV123123",
    "idIssuingState": "OH",
    "idIssuingCountry": "USA"
  },
  "locale": "EN-US",
  "occupation": null,
  "taxId": "614567890",
  "timeZone": null
}
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
  /api/v2/me:
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get User
      x-child-product-name: Users
      summary: V2 Get user call for subscriber.
      operationId: GetV2
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV2IpsResponse'
              example: {
  "billingClass": "2160",
  "consumerTier": "1",
  "isAllowedToSolicit": true,
  "isEmployee": true,
  "sponsorBillingCategory": "BB",
  "userId": "7bfb6e67-9835-42d7-bc75-991427ee45fd",
  "name": {
    "firstName": "John",
    "lastName": "Johnson",
    "middleName": "M",
    "nickname": "Johnny",
    "prefix": "Dr"
  },
  "businessName": "Johnson",
  "contactEndPoints": [
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Mobile",
        "value": "91-8694522121"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Day",
        "value": "8694522451"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Evening",
        "value": "91-8697822121"
      }
    },
    {
      "status": "Active",
      "endPointType": "Email",
      "email": {
        "value": "test@abc.com"
      }
    },
    {
      "status": "Active",
      "endPointType": "Address",
      "address": {
        "addressType": "USAddress",
        "usAddress": {
          "address1": "6000 Perimeter Drive",
          "address2": "Ste 3A",
          "address3": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43017"
        }
      }
    }
  ],
  "category": "VIP member",
  "sensitiveInformationUri": "/api/v2/me/SensitiveInformation",
  "timeZone": 5,
  "country": "US",
  "status": "Unspecified",
  "lastLoginDate": "2022-01-27T16:42:07.3055948-05:00",
  "languageCode": "EN",
  "languageCountry": "US",
  "locale": "EN-US",
  "newUser": true,
  "occupation": "Accountants",
  "modifiableFields": [
    "businessName",
    "name",
    "contactEndPoints",
    "category",
    "country",
    "locale",
    "languageCode",
    "languageCountry",
    "occupation",
    "timeZone",
    "billingClass",
    "consumerTier",
    "isAllowedToSolicit",
    "isEmployee",
    "sponsorBillingCategory",
    "birthDate",
    "identityValidationInformation",
    "taxId",
    "password",
    "securityQuestion",
    "securityAnswer"
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/sensitiveInformation:
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get Sensitive Info
      x-child-product-name: Users
      summary: Get sensitive information.
      operationId: GetSensitiveInformation
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveInformationIEnumerableIpsResponse'
              example: {
  "birthDate": "1970-06-14",
  "taxId": "321-544-57",
  "driversLicenseNumber": "012 345 687",
  "driversLicenseState": "New York"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/Consents:
    post:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Add Consents
      x-child-product-name: Users
      summary: Post consents.
      operationId: PostConsent
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConsentList'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentList'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/ConsentList'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConsentList'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get Consents
      x-child-product-name: Users
      summary: Get consent information.
      operationId: GetConsents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentOutputIpsResponse'
              example: {
  "data": {
    "billDiscoveryUserConsent": true,
    "creditBureauUserConsent": true
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/features:
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get Features
      x-child-product-name: Users
      summary: Get features call.
      operationId: GetFeatures
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesIpsResponse'
              example: {
  "supportsBillDiscovery": true,
  "supportsCardFundedBillPay": false,
  "billDiscoveryProviderType": [
    "BillServiceProvider",
    "CreditBureau"
  ],
  "transactionHistoryMonths": 60,
  "lddEnabled": true,
  "cardFundingOptions": {
    "sponsorFirstPartyDebit": true,
    "sponsorFirstPartyCredit": true,
    "subscriberFirstPartyDebit": false,
    "subscriberFirstPartyCredit": true,
    "subscriberThirdPartyDebit": true
  },
  "supportsClassicView": true
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/Users:
    post:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Add User
      x-child-product-name: Users
      summary: Post user.
      operationId: PostUserAsync
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ManagedUser'
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedUser'
          text/json:
            schema:
              $ref: '#/components/schemas/ManagedUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManagedUser'
      responses:
        '201':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
  /api/v2/me/Users:
    post:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Add User
      x-child-product-name: Users
      summary: Post user v2.
      operationId: PostUserV2Async
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ManagedUserV2'
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedUserV2'
          text/json:
            schema:
              $ref: '#/components/schemas/ManagedUserV2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManagedUserV2'
      responses:
        '201':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
  '/api/v1/me/preferences/{id}':
    delete:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Delete User Preference
      x-child-product-name: Users
      summary: To delete the user preference.
      operationId: DeletePreference
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    patch:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Modify User Preference
      x-child-product-name: Users
      summary: To Update the User Preference Based On User Preference Id.
      operationId: PatchUserPreference
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PreferencesPatchRequest'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/PreferencesPatchRequest'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/PreferencesPatchRequest'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/PreferencesPatchRequest'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/preferences:
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get User Preferences
      x-child-product-name: Users
      summary: To get the user preferences.
      operationId: GetPreferences
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferenceListIpsResponse'
              example: {
  "data": {
    "preferences": [
      {
        "preferenceName": "ONBO_COMPLETED",
        "preferenceValue": "true",
        "self": "/api/v1/me/preferences/b1817079-5f41-412d-bc9a-8e6956bd15df",
        "id": "b1817079-5f41-412d-bc9a-8e6956bd15df"
      },
      {
        "preferenceName": "LAST_VIEWED_ONBO_PAGE",
        "preferenceValue": "ONBO_WELCOME",
        "self": "/api/v1/me/preferences/b5b75c92-02d7-473c-886a-2b198280d0f8",
        "id": "b5b75c92-02d7-473c-886a-2b198280d0f8"
      }
    ]
  },
  "result": {
    "success": true
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
    post:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Add User Preference
      x-child-product-name: Users
      summary: Add user preferences
      operationId: PostUserPreferences
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PreferencesPostRequestList'
            example: {
  "preferences": [
    {
      "preferenceName": "ONBO_COMPLETED",
      "preferenceValue": "true",
      "listItemId": 1
    },
    {
      "preferenceName": "LAST_VIEWED_ONBO_PAGE",
      "preferenceValue": "ONBO_WELCOME",
      "listItemId": 2
    }
  ]
}
          application/json:
            schema:
              $ref: '#/components/schemas/PreferencesPostRequestList'
            example: {
  "preferences": [
    {
      "preferenceName": "ONBO_COMPLETED",
      "preferenceValue": "true",
      "listItemId": 1
    },
    {
      "preferenceName": "LAST_VIEWED_ONBO_PAGE",
      "preferenceValue": "ONBO_WELCOME",
      "listItemId": 2
    }
  ]
}
          text/json:
            schema:
              $ref: '#/components/schemas/PreferencesPostRequestList'
            example: {
  "preferences": [
    {
      "preferenceName": "ONBO_COMPLETED",
      "preferenceValue": "true",
      "listItemId": 1
    },
    {
      "preferenceName": "LAST_VIEWED_ONBO_PAGE",
      "preferenceValue": "ONBO_WELCOME",
      "listItemId": 2
    }
  ]
}
          application/*+json:
            schema:
              $ref: '#/components/schemas/PreferencesPostRequestList'
            example: {
  "preferences": [
    {
      "preferenceName": "ONBO_COMPLETED",
      "preferenceValue": "true",
      "listItemId": 1
    },
    {
      "preferenceName": "LAST_VIEWED_ONBO_PAGE",
      "preferenceValue": "ONBO_WELCOME",
      "listItemId": 2
    }
  ]
}
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferencesPostResponseIpsResponse'
              example: {
  "data": {
    "preferences": [
      {
        "listItemId": 1,
        "data": {
          "self": "/api/v1/me/preferences/46ed2e6ff55742db94e546356baa1e73",
          "id": "46ed2e6ff55742db94e546356baa1e73"
        },
        "result": {
          "success": true
        }
      },
      {
        "listItemId": 2,
        "data": {
          "self": "/api/v1/me/preferences/547aed56b0f74977846243967591dbe4",
          "id": "547aed56b0f74977846243967591dbe4"
        },
        "result": {
          "success": true
        }
      }
    ]
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/users/{userId}':
    delete:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Delete User
      x-child-product-name: Users
      summary: Deletes an existing user
      description: "The operation takes an optional query parameter Id Type to determine whether or not User Id Type is specified\r\nIf the query parameter is not submitted, it defaults to CheckFreeNextUserId Type, and no delete operation are canceled."
      operationId: DeleteUser
      parameters:
        - name: userId
          in: path
          description: Challenger identity of the user
          required: true
          schema:
            type: string
            description: Challenger identity of the user
            nullable: true
        - name: idType
          in: query
          description: Id Type of User
          schema:
            $ref: '#/components/schemas/UserIdType'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get User Info
      x-child-product-name: Users
      summary: Get User Information
      description: This API will return user information.
      operationId: Get
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIpsResponse'
              example: {
  "userId": "15ba2175-7dd6-4a27-99d2-433af4b593b3",
  "name": {
    "firstName": "John",
    "lastName": "Johnson",
    "middleName": "M",
    "nickname": "Johnny",
    "prefix": "Dr"
  },
  "businessName": "Johnson",
  "contactEndPoints": [
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Mobile",
        "value": "91-8694522121"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Day",
        "value": "8694522451"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Evening",
        "value": "91-8697822121"
      }
    },
    {
      "status": "Active",
      "endPointType": "Email",
      "email": {
        "value": "test@abc.com"
      }
    },
    {
      "status": "Active",
      "endPointType": "Address",
      "address": {
        "addressType": "USAddress",
        "usAddress": {
          "address1": "6000 Perimeter Drive",
          "address2": "Ste 3A",
          "address3": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43017"
        }
      }
    }
  ],
  "category": "VIP member",
  "sensitiveInformationUri": "/api/v1/me/SensitiveInformation",
  "timeZone": 5,
  "country": "US",
  "status": "Unspecified",
  "lastLoginDate": "2022-01-27T16:42:07.3877435-05:00",
  "languageCode": "EN",
  "languageCountry": "US",
  "locale": "EN-US",
  "newUser": true,
  "occupation": "Accountants",
  "modifiableFields": [
    "middleName",
    "lastName",
    "usAddress",
    "occupation"
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
  '/api/v2/me/users/{userId}':
    delete:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Delete User
      x-child-product-name: Users
      summary: Deletes an existing user
      description: "The operation takes an optional query parameter Id Type to determine whether or not User Id Type is specified\r\nIf the query parameter is not submitted, it defaults to CheckFreeNextUserId Type, and no delete operation are canceled."
      operationId: DeleteUser
      parameters:
        - name: userId
          in: path
          description: Challenger identity of the user
          required: true
          schema:
            type: string
            description: Challenger identity of the user
            nullable: true
        - name: idType
          in: query
          description: Id Type of User
          schema:
            $ref: '#/components/schemas/UserIdType'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get User Info
      x-child-product-name: Users
      summary: V2 - Get User Information
      description: This API will return user information.
      operationId: GetV2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: idType
          in: query
          schema:
            $ref: '#/components/schemas/UserIdType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV2IpsResponse'
              example: {
  "billingClass": "2160",
  "consumerTier": "1",
  "isAllowedToSolicit": true,
  "isEmployee": true,
  "sponsorBillingCategory": "BB",
  "userId": "5b0cfe09-3876-4042-b38e-56229ba55a37",
  "name": {
    "firstName": "John",
    "lastName": "Johnson",
    "middleName": "M",
    "nickname": "Johnny",
    "prefix": "Dr"
  },
  "businessName": "Johnson",
  "contactEndPoints": [
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Mobile",
        "value": "91-8694522121"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Day",
        "value": "8694522451"
      }
    },
    {
      "status": "Active",
      "endPointType": "Phone",
      "phone": {
        "phoneType": "Evening",
        "value": "91-8697822121"
      }
    },
    {
      "status": "Active",
      "endPointType": "Email",
      "email": {
        "value": "test@abc.com"
      }
    },
    {
      "status": "Active",
      "endPointType": "Address",
      "address": {
        "addressType": "USAddress",
        "usAddress": {
          "address1": "6000 Perimeter Drive",
          "address2": "Ste 3A",
          "address3": "Mailbox 1034",
          "city": "Dublin",
          "state": "OH",
          "zipCode": "43017"
        }
      }
    }
  ],
  "category": "VIP member",
  "sensitiveInformationUri": "/api/v2/me/SensitiveInformation",
  "timeZone": 5,
  "country": "US",
  "status": "Unspecified",
  "lastLoginDate": "2022-01-27T16:42:07.3928445-05:00",
  "languageCode": "EN",
  "languageCountry": "US",
  "locale": "EN-US",
  "newUser": true,
  "occupation": "Accountants",
  "modifiableFields": [
    "businessName",
    "name",
    "contactEndPoints",
    "category",
    "country",
    "locale",
    "languageCode",
    "languageCountry",
    "occupation",
    "timeZone",
    "billingClass",
    "consumerTier",
    "isAllowedToSolicit",
    "isEmployee",
    "sponsorBillingCategory",
    "birthDate",
    "identityValidationInformation",
    "taxId",
    "password",
    "securityQuestion",
    "securityAnswer"
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
  '/api/v1/me/Users/{userId}':
    patch:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Modify User
      x-child-product-name: Users
      summary: Patch user.
      operationId: ModifyUser
      parameters:
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequest'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequest'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequest'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequest'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
  '/api/v2/me/Users/{userId}':
    patch:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Modify User
      x-child-product-name: Users
      summary: Patch user V2.
      operationId: ModifyUserV2
      parameters:
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
        - name: idType
          in: query
          schema:
            $ref: '#/components/schemas/UserIdType'
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequestV2'
            example: "112233445566"
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequestV2'
            example: "112233445566"
          text/json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequestV2'
            example: "112233445566"
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManagedUserPatchRequestV2'
            example: "112233445566"
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
  /api/v2/me/sensitiveInformation:
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get User Sensitive Info
      x-child-product-name: Users
      summary: Get sensitive information.
      operationId: GetSensitiveInformationV2
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveInformationV2IEnumerableIpsResponse'
              example: {
  "securityQuestion": "YourCityOfBirth",
  "securityAnswer": "NewYork",
  "birthDate": "1970-06-14",
  "taxId": "321-544-57",
  "driversLicenseNumber": "012 345 687",
  "driversLicenseState": "New York"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  /api/v1/me/probableMerchants:
    get:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Get List of Probably Merchants
      x-child-product-name: Users
      summary: Get probable merchants for the user
      operationId: GetProbableMerchants
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbableMerchantsIpsResponse'
              example: {
  "data": {
    "probablePayeeList": [
      {
        "categoryId": 1,
        "category": "UTILITIES",
        "suggestedDisplayPriority": 1,
        "merchantList": [
          {
            "displayPayeeName": "Bay State Gas",
            "logoUri": "https://payeelogos-dev.apps.fog.onefiserv.net/63.png",
            "payeeList": [
              {
                "billerId": "7186434050001",
                "onlinePayeeName": "Bay State Gas (SBC-AR,KS,MO)",
                "merchantZipRequired": false,
                "self": "/api/v1/me/probableMerchants/fc15a723d846358b3fa67aad33ddd5",
                "id": "fc15a723d846358b3fa67aad33ddd5"
              },
              {
                "billerId": "7186434052131",
                "onlinePayeeName": "Bay State Gas (SBC-MI,OH,WI)",
                "merchantZipRequired": true,
                "self": "/api/v1/me/probableMerchants/fc15a723d846358b3fa67aad22ddd5",
                "id": "fc15a723d846358b3fa67aad22ddd5"
              }
            ]
          },
          {
            "displayPayeeName": "FIRSTAR BANKS",
            "logoUri": "https://payeelogos-dev.apps.fog.onefiserv.net/31.png",
            "payeeList": [
              {
                "billerId": "7123434050001",
                "onlinePayeeName": "FIRSTAR BANKS (SBC-AR,KS,TX)",
                "merchantZipRequired": true,
                "self": "/api/v1/me/probableMerchants/fc15a733d846358b3fa67aad22ddd5",
                "id": "fc15a733d846358b3fa67aad22ddd5"
              },
              {
                "billerId": "7186432341001",
                "onlinePayeeName": "FIRSTAR BANKS (SBC-IL,OH,WI)",
                "merchantZipRequired": false,
                "self": "/api/v1/me/probableMerchants/fc15a833d846358b3fa67aad22ddd5",
                "id": "fc15a833d846358b3fa67aad22ddd5"
              }
            ]
          }
        ]
      },
      {
        "categoryId": 2,
        "category": "PHONE",
        "suggestedDisplayPriority": 2,
        "merchantList": [
          {
            "displayPayeeName": "AT&T",
            "logoUri": "https://payeelogos-dev.apps.fog.onefiserv.net/5.png",
            "payeeList": [
              {
                "billerId": "7186431234001",
                "onlinePayeeName": "AT&T Bill (SBC-AR,KS,MO,OK,TX)",
                "merchantZipRequired": true,
                "self": "/api/v1/me/probableMerchants/dc15a833d846358b3fa67aad22ddd5",
                "id": "dc15a833d846358b3fa67aad22ddd5"
              },
              {
                "billerId": "7186434012001",
                "onlinePayeeName": "AT&T (Local and Long Distance)",
                "merchantZipRequired": true,
                "self": "/api/v1/me/probableMerchants/wc15a812d846358b3fa67aad22ddd5",
                "id": "wc15a812d846358b3fa67aad22ddd5"
              }
            ]
          },
          {
            "displayPayeeName": "AMERICAN EXPRESS",
            "logoUri": "https://payeelogos-dev.apps.fog.onefiserv.net/52.png",
            "payeeList": [
              {
                "billerId": "8671434050001",
                "onlinePayeeName": "American Express",
                "merchantZipRequired": false,
                "self": "/api/v1/me/probableMerchants/ac15a812d812358b3fa67aad22ddd5",
                "id": "ac15a812d812358b3fa67aad22ddd5"
              },
              {
                "billerId": "9186434050001",
                "onlinePayeeName": "American Express CC",
                "merchantZipRequired": false,
                "self": "/api/v1/me/probableMerchants/rfc15a81d812358b3fa67aad22ddd5",
                "id": "rfc15a81d812358b3fa67aad22ddd5"
              }
            ]
          }
        ]
      }
    ]
  },
  "result": {
    "success": true
  }
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIpsResponse'
              example: {
  "result": {
    "success": true,
    "resultInfo": [
      {
        "resultCategory": "Info",
        "code": "0000",
        "description": "Success."
      }
    ]
  }
}
  '/api/v1/me/users/{userId}/billDeliveryFailure/{ebillId}':
    post:
      tags:
        - Users
      x-group-name: Users
      x-proxy-name: Post Ebill Delivery Failure
      x-child-product-name: Users
      summary: Post Ebill Delivery Failure
      operationId: PostEbillDeliveryFailure
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: ebillId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultTypeIpsResponse'
components:
  schemas:
    AutomaticTransactionStatus:
      enum:
        - Active
        - Canceled
        - Completed
        - Pending
      type: string
    TransactionInitiationType:
      enum:
        - DueDate
        - UponReceipt
        - DaysBeforeDueDate
      type: string
    TransactionAmountType:
      enum:
        - FixedAmount
        - AmountDue
        - MinimumAmountDue
        - AccountBalance
      type: string
    BillTransactionSchedule:
      required:
        - transactionInitiationType
        - transactionScheduledAlert
        - transactionSentAlert
        - transactionType
      type: object
      properties:
        amount:
          type: number
          format: double
          nullable: true
        maximumTransactionAmount:
          type: number
          format: double
          nullable: true
        scheduleDaysBefore:
          type: integer
          format: int32
          nullable: true
        transactionInitiationType:
          $ref: '#/components/schemas/TransactionInitiationType'
        transactionType:
          $ref: '#/components/schemas/TransactionAmountType'
        transactionScheduledAlert:
          type: boolean
        transactionSentAlert:
          type: boolean
      additionalProperties: false
    TransactionFrequency:
      enum:
        - Weekly
        - Every2Weeks
        - Every4Weeks
        - TwiceAMonth
        - Monthly
        - Every2Months
        - Every3Months
        - Every4Months
        - Every6Months
        - Annually
      type: string
    TransactionDuration:
      enum:
        - UntilSubscriberCancels
        - XNumberOfPayments
        - SpecificEndDate
        - Empty
      type: string
    RecurringTransactionSchedule:
      required:
        - amount
        - frequency
        - initiationDate
        - recurringScheduleExpireAlert
        - transactionScheduledAlert
        - transactionSentAlert
      type: object
      properties:
        amount:
          type: number
          format: double
        endDate:
          type: string
          nullable: true
        endTransactionAmount:
          type: number
          format: double
          nullable: true
        frequency:
          $ref: '#/components/schemas/TransactionFrequency'
        initialTransactionAmount:
          type: number
          format: double
          nullable: true
        initiationDate:
          type: string
        maximumTransactionCount:
          type: integer
          format: int32
          nullable: true
        remainingTransactionCount:
          type: integer
          format: int32
          nullable: true
        memo:
          maxLength: 34
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        transactionScheduledAlert:
          type: boolean
        transactionSentAlert:
          type: boolean
        recurringScheduleExpireAlert:
          type: boolean
        duration:
          $ref: '#/components/schemas/TransactionDuration'
        nextTransactionGenerationDate:
          type: string
          nullable: true
        transactionAuthorized:
          type: boolean
          nullable: true
      additionalProperties: false
    AutomaticTransactionOutputDetail:
      required:
        - destinationUri
        - fundingAccountUri
        - id
        - modifiableFields
        - self
        - status
      type: object
      properties:
        modifiableFields:
          type: array
          example:
            - amount
            - maximumTransactionAmount
          items:
            type: string
        id:
          type: string
        self:
          type: string
          format: uri
        status:
          $ref: '#/components/schemas/AutomaticTransactionStatus'
        fundingAccountUri:
          type: string
          format: uri
        destinationUri:
          type: string
          format: uri
        billTransactionSchedule:
          $ref: '#/components/schemas/BillTransactionSchedule'
        recurringTransactionSchedule:
          $ref: '#/components/schemas/RecurringTransactionSchedule'
      additionalProperties: false
    AutomaticTransactionList:
      type: object
      properties:
        automaticTransactions:
          type: array
          items:
            $ref: '#/components/schemas/AutomaticTransactionOutputDetail'
          nullable: true
      additionalProperties: false
    ResultCategory:
      enum:
        - Error
        - Warning
        - Info
      type: string
    ResultInfo:
      type: object
      properties:
        resultCategory:
          $ref: '#/components/schemas/ResultCategory'
        code:
          type: string
          nullable: true
        field:
          type: string
          nullable: true
        fieldPath:
          type: string
          nullable: true
        listItemId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    ResultType:
      type: object
      properties:
        success:
          type: boolean
        resultInfo:
          type: array
          items:
            $ref: '#/components/schemas/ResultInfo'
          nullable: true
      additionalProperties: false
    ObjectIpsResponse:
      type: object
      properties:
        data:
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    AutomaticTransaction:
      required:
        - destinationUri
        - fundingAccountUri
      type: object
      properties:
        fundingAccountUri:
          type: string
          format: uri
        destinationUri:
          type: string
          format: uri
        billTransactionSchedule:
          $ref: '#/components/schemas/BillTransactionSchedule'
        recurringTransactionSchedule:
          $ref: '#/components/schemas/RecurringTransactionSchedule'
      additionalProperties: false
    BaseModel:
      required:
        - id
        - self
      type: object
      properties:
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    BaseModelIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BaseModel'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    PendingTransactionsList:
      type: object
      properties:
        pendingTransactionsNotCancelled:
          type: array
          items:
            $ref: '#/components/schemas/BaseModel'
          nullable: true
      additionalProperties: false
    PendingTransactionsListIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PendingTransactionsList'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BillTransactionSchedulePatch:
      type: object
      properties:
        amount:
          type: number
          format: double
          nullable: true
        maximumTransactionAmount:
          type: number
          format: double
          nullable: true
        scheduleDaysBefore:
          type: integer
          format: int32
          nullable: true
        transactionInitiationType:
          $ref: '#/components/schemas/TransactionInitiationType'
        transactionType:
          $ref: '#/components/schemas/TransactionAmountType'
        transactionScheduledAlert:
          type: boolean
          nullable: true
        transactionSentAlert:
          type: boolean
          nullable: true
      additionalProperties: false
    RecurringTransactionSchedulePatch:
      type: object
      properties:
        amount:
          type: number
          format: double
          nullable: true
        endDate:
          type: string
          nullable: true
        endTransactionAmount:
          type: number
          format: double
          nullable: true
        frequency:
          $ref: '#/components/schemas/TransactionFrequency'
        initiationDate:
          type: string
          nullable: true
        maximumTransactionCount:
          type: integer
          format: int32
          nullable: true
        memo:
          maxLength: 34
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        transactionScheduledAlert:
          type: boolean
          nullable: true
        transactionSentAlert:
          type: boolean
          nullable: true
        recurringScheduleExpireAlert:
          type: boolean
          nullable: true
        transactionAuthorized:
          type: boolean
          nullable: true
      additionalProperties: false
    AutomaticTransactionPatch:
      type: object
      properties:
        fundingAccountUri:
          type: string
          format: uri
          nullable: true
        billTransactionSchedule:
          $ref: '#/components/schemas/BillTransactionSchedulePatch'
        recurringTransactionSchedule:
          $ref: '#/components/schemas/RecurringTransactionSchedulePatch'
      additionalProperties: false
    TransactionsList:
      type: object
      properties:
        transactionsNotModified:
          type: array
          items:
            $ref: '#/components/schemas/BaseModel'
          nullable: true
      additionalProperties: false
    TransactionsListIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TransactionsList'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    FinancialInstitutionModel:
      type: object
      properties:
        financialInstitutionName:
          type: string
          nullable: true
      additionalProperties: false
    FinancialInstitutionModelIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FinancialInstitutionModel'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    ResultTypeIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ResultType'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    AccountType:
      enum:
        - Checking
        - Savings
        - InstallmentLoan
        - IndividualRetirement
        - CommercialLoan
        - MoneyMarket
        - LineOfCredit
        - Brokerage
        - SpecialDeposit
      type: string
    ConfirmationStatusCode:
      enum:
        - Confirmed
        - Failed
        - Pending
        - InProgress
      type: string
    AccountStatusCode:
      enum:
        - Active
        - Inactive
        - Pending
        - Rejected
      type: string
    USAddress:
      required:
        - address1
        - city
        - state
        - zipCode
      type: object
      properties:
        address1:
          maxLength: 32
          minLength: 1
          pattern: '^(?=.*\w)^[a-zA-Z0-9_@!+#.$,/%^ *-]*'
          type: string
        address2:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_@!+#.$,/%^ *-]*'
          type: string
          nullable: true
        address3:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_@!+#.$,/%^ *-]*'
          type: string
          nullable: true
        city:
          maxLength: 32
          minLength: 1
          pattern: '^[a-zA-Z0-9_ @!+#.$,%^*-]*'
          type: string
        state:
          maxLength: 2
          minLength: 2
          pattern: '^[A-Z]*'
          type: string
        zipCode:
          pattern: '^(\d{5}|\d{9}|\d{11})$'
          type: string
      additionalProperties: false
    InternationalAddress:
      required:
        - address1
        - city
        - countryCode
        - postalCode
      type: object
      properties:
        address1:
          maxLength: 32
          minLength: 1
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        address2:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        city:
          maxLength: 32
          minLength: 1
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        countryCode:
          maxLength: 3
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        postalCode:
          maxLength: 11
          minLength: 2
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        provinceName:
          maxLength: 30
          minLength: 2
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        state:
          maxLength: 2
          minLength: 2
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
      additionalProperties: false
    BankingOptions:
      type: object
      properties:
        isDownloadTransactionsEnabled:
          type: boolean
        isSourceTransferAccount:
          type: boolean
        isDestinationTransferAccount:
          type: boolean
      additionalProperties: false
    BankAccountGetModel:
      required:
        - accountStatus
        - accountType
        - confirmationStatus
        - id
        - isBusiness
        - isPreferred
        - maskedAccountNumber
        - routingTransitNumber
        - self
        - unmaskedAccountNumberUri
      type: object
      properties:
        self:
          type: string
          format: uri
        id:
          type: string
        modifiableFields:
          type: array
          items:
            type: string
          nullable: true
        accountType:
          $ref: '#/components/schemas/AccountType'
        maskedAccountNumber:
          type: string
        nickname:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$, %*-]{1,30}$'
          type: string
          nullable: true
        balanceUri:
          type: string
          format: uri
          nullable: true
        isPreferred:
          type: boolean
        unmaskedAccountNumberUri:
          type: string
          format: uri
        routingTransitNumber:
          pattern: '^[0-9]{9}$'
          type: string
        isBusiness:
          type: boolean
        businessName:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        primaryAccountOwner:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        secondaryAccountOwner:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        confirmationStatus:
          $ref: '#/components/schemas/ConfirmationStatusCode'
        accountStatus:
          $ref: '#/components/schemas/AccountStatusCode'
        checkPrintAddress:
          $ref: '#/components/schemas/USAddress'
        checkPrintAddressInternational:
          $ref: '#/components/schemas/InternationalAddress'
        bankingOptions:
          $ref: '#/components/schemas/BankingOptions'
      additionalProperties: false
    BankAccountGetModelListIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountGetModel'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BankAccountPostRequest:
      required:
        - accountNumber
        - accountType
        - isBusiness
        - routingTransitNumber
      type: object
      properties:
        routingTransitNumber:
          pattern: '^[0-9]{9}$'
          type: string
        accountNumber:
          pattern: '^[a-zA-Z0-9]{1,22}$'
          type: string
        accountType:
          $ref: '#/components/schemas/AccountType'
        nickname:
          maxLength: 30
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        startingCheckNumber:
          type: integer
          format: int32
          nullable: true
        isPreferred:
          type: boolean
          nullable: true
        isBusiness:
          type: boolean
        businessName:
          maxLength: 40
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        primaryAccountOwner:
          maxLength: 35
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        secondaryAccountOwner:
          maxLength: 35
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        checkPrintAddress:
          $ref: '#/components/schemas/USAddress'
        checkPrintAddressInternational:
          $ref: '#/components/schemas/InternationalAddress'
        bankingOptions:
          $ref: '#/components/schemas/BankingOptions'
      additionalProperties: false
    UserIdType:
      enum:
        - SubscriberId
        - ExternalSubscriberId
        - CheckFreeNextUserId
      type: string
    BankAccountGetModelIEnumerableIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountGetModel'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BankAccountPatchRequest:
      type: object
      properties:
        nickname:
          maxLength: 30
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        startingCheckNumber:
          pattern: '^[0-9]*'
          type: string
          nullable: true
        isPreferred:
          type: boolean
          nullable: true
        isBusiness:
          type: boolean
          nullable: true
        businessName:
          maxLength: 40
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        primaryAccountOwner:
          maxLength: 35
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        secondaryAccountOwner:
          maxLength: 35
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        checkPrintAddress:
          $ref: '#/components/schemas/USAddress'
        checkPrintAddressInternational:
          $ref: '#/components/schemas/InternationalAddress'
        bankingOptions:
          $ref: '#/components/schemas/BankingOptions'
      additionalProperties: false
    StringIpsResponse:
      type: object
      properties:
        data:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    VerificationStatusCode:
      enum:
        - Completed
        - InProgress
      type: string
    VerificationInfo:
      required:
        - verificationToken
      type: object
      properties:
        verificationToken:
          type: string
        verificationStatus:
          $ref: '#/components/schemas/VerificationStatusCode'
        newAccount:
          type: boolean
      additionalProperties: false
    VerificationInfoIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VerificationInfo'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BankAccountPostVerificationResponse:
      type: object
      properties:
        confirmationStatus:
          $ref: '#/components/schemas/ConfirmationStatusCode'
      additionalProperties: false
    BankAccountPostVerificationResponseIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BankAccountPostVerificationResponse'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BillerInfo:
      type: object
      properties:
        billerLogoUrl:
          type: string
          format: uri
          nullable: true
        billReferenceImageUrl:
          type: string
          format: uri
          nullable: true
        billReferenceLinkUrl:
          type: string
          format: uri
          nullable: true
        billReferenceText:
          type: string
          nullable: true
      additionalProperties: false
    BillTypes:
      enum:
        - FromBiller
        - FromSubscriber
        - FromBillDueAlert
      type: string
    BillInfoReason:
      enum:
        - NoneSpecified
        - Bank
        - Check
        - Cash
        - NotPaid
        - Other
        - BillerWebSite
        - Phone
        - Mail
        - Office
        - ZeroBalanceBill
        - ContestedBill
      type: string
    FiledBillInfo:
      required:
        - reason
      type: object
      properties:
        note:
          maxLength: 80
          minLength: 1
          type: string
          nullable: true
        reason:
          $ref: '#/components/schemas/BillInfoReason'
      additionalProperties: false
    BillStatus:
      enum:
        - Paid
        - Unpaid
        - PaymentFailed
        - PaymentCanceled
        - Filed
      type: string
    Bill:
      required:
        - actionByDate
        - amountDue
        - billType
        - destinationUrl
        - detailUrl
        - dueDate
        - id
        - isDetailUrlIframeSupported
        - self
        - status
      type: object
      properties:
        amountDue:
          type: number
          format: double
        balanceAmountDue:
          type: number
          format: double
          nullable: true
        billerInfo:
          $ref: '#/components/schemas/BillerInfo'
        billType:
          $ref: '#/components/schemas/BillTypes'
        dateFirstViewed:
          type: string
          nullable: true
        destinationUrl:
          type: string
          format: uri
        dueDate:
          type: string
        actionByDate:
          type: string
          format: date-time
        dueDateText:
          maxLength: 20
          type: string
          nullable: true
        detailUrl:
          type: string
          format: uri
        filedBillInfo:
          $ref: '#/components/schemas/FiledBillInfo'
        isDetailUrlIframeSupported:
          type: boolean
        minimumAmountDue:
          type: number
          format: double
          nullable: true
        replacedBillId:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/BillStatus'
        useDueDateText:
          type: boolean
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    BillIEnumerableIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BillIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Bill'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    CardAddedByType:
      enum:
        - Sponsor
        - Subscriber
      type: string
    CardType:
      enum:
        - AmericanExpress
        - Discover
        - MasterCard
        - Visa
      type: string
    CardAccountGetModel:
      required:
        - billingAddress
        - cardType
        - expirationMonth
        - expirationYear
        - externalAccountDescription
        - isDebit
        - nameOnCard
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        id:
          type: string
          nullable: true
        addedBy:
          $ref: '#/components/schemas/CardAddedByType'
        cardNumberMasked:
          type: string
          nullable: true
        modifiableFields:
          type: array
          items:
            type: string
          nullable: true
        deleteAllowed:
          type: boolean
        cardType:
          $ref: '#/components/schemas/CardType'
        isDebit:
          type: boolean
        billingAddress:
          $ref: '#/components/schemas/USAddress'
        expirationMonth:
          type: integer
          format: int32
        expirationYear:
          type: integer
          format: int32
        externalAccountDescription:
          type: string
        nameOnCard:
          type: string
        nickname:
          type: string
          nullable: true
      additionalProperties: false
    CardAccountGetModelIEnumerableIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CardAccountGetModel'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    CardAccountPatch:
      type: object
      properties:
        billingAddress:
          $ref: '#/components/schemas/USAddress'
        expirationMonth:
          pattern: '^([1-9]|1[012])$'
          type: integer
          format: int32
          nullable: true
        expirationYear:
          pattern: '^[0-9]{4}$'
          type: integer
          format: int32
          nullable: true
        externalAccountDescription:
          maxLength: 32
          type: string
          nullable: true
        nameOnCard:
          maxLength: 80
          type: string
          nullable: true
        nickname:
          maxLength: 30
          type: string
          nullable: true
        cvv:
          maxLength: 4
          minLength: 3
          pattern: '^[0-9]*'
          type: string
          nullable: true
      additionalProperties: false
    CardAccountPostRequest:
      required:
        - billingAddress
        - cardNumber
        - cardType
        - expirationMonth
        - expirationYear
        - externalAccountDescription
        - nameOnCard
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 15
          pattern: '^[0-9]*'
          type: string
        cardType:
          $ref: '#/components/schemas/CardType'
        expirationMonth:
          pattern: '^([1-9]|1[012])$'
          type: integer
          format: int32
        expirationYear:
          pattern: '^[0-9]{4}$'
          type: integer
          format: int32
        externalAccountDescription:
          maxLength: 32
          type: string
        nameOnCard:
          maxLength: 80
          type: string
        nickname:
          maxLength: 30
          type: string
          nullable: true
        billingAddress:
          $ref: '#/components/schemas/USAddress'
        cvv:
          maxLength: 4
          minLength: 3
          pattern: '^[0-9]*'
          type: string
          nullable: true
      additionalProperties: false
    CardAccountPostResponse:
      required:
        - id
        - self
      type: object
      properties:
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    CardAccountPostResponseIpsListItemResponse:
      type: object
      properties:
        listItemId:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/CardAccountPostResponse'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    CardAccountAddLimits:
      type: object
      properties:
        rollingPeriodDaysLimit:
          type: integer
          format: int32
        rollingPeriodDaysLimitModifiable:
          type: boolean
        rollingPeriodCardsLimit:
          type: integer
          format: int32
        rollingPeriodCardsRemainingCount:
          type: integer
          format: int32
        rollingPeriodCardsLimitModifiable:
          type: boolean
        sameCardDeleteAddLimit:
          type: integer
          format: int32
        sameCardDeleteAddLimitModifiable:
          type: boolean
        activeCardLimit:
          type: integer
          format: int32
        activeCardRemainingCount:
          type: integer
          format: int32
        activeCardLimitModifiable:
          type: boolean
      additionalProperties: false
    CardAccountAddLimitsIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CardAccountAddLimits'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    DocumentTypeCodes:
      enum:
        - ESIGN
        - TermsConditions
        - PrivacyPolicy
        - TCPA
      type: string
    LegalDocumentAgreement:
      required:
        - agreementRequired
        - legalDocumentType
        - legalDocumentUri
        - locale
      type: object
      properties:
        agreementRequired:
          type: boolean
        firstTimeAcceptance:
          type: boolean
        legalDocumentType:
          $ref: '#/components/schemas/DocumentTypeCodes'
        legalDocumentUri:
          type: string
          format: uri
        locale:
          type: string
      additionalProperties: false
    LegalDocumentAgreementListIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LegalDocumentAgreement'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    PostLegalDocument:
      required:
        - legalDocumentId
      type: object
      properties:
        legalDocumentId:
          type: string
      additionalProperties: false
    LegalDocument:
      required:
        - id
        - legalDocumentContent
        - legalDocumentType
        - locale
        - self
      type: object
      properties:
        legalDocumentType:
          $ref: '#/components/schemas/DocumentTypeCodes'
        legalDocumentContent:
          type: string
        locale:
          type: string
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    LegalDocumentIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LegalDocument'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    LegalDocumentListIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LegalDocument'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    Merchant:
      required:
        - id
        - self
      type: object
      properties:
        logoUri:
          type: string
          nullable: true
        merchantZipRequired:
          type: boolean
        name:
          type: string
          nullable: true
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    MerchantIEnumerableIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Merchant'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    PaperSupressionTermsResponse:
      type: object
      properties:
        paperSuppressionTermsUrl:
          type: string
          format: uri
          nullable: true
      additionalProperties: false
    PaperSupressionTermsResponseIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PaperSupressionTermsResponse'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    SocialTokenType:
      enum:
        - Email
        - Phone
      type: string
    SocialToken:
      required:
        - type
        - value
      type: object
      properties:
        value:
          type: string
        type:
          $ref: '#/components/schemas/SocialTokenType'
      additionalProperties: false
    PayeeSocialToken:
      required:
        - id
        - self
        - socialToken
      type: object
      properties:
        socialToken:
          $ref: '#/components/schemas/SocialToken'
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    BankAccount:
      required:
        - accountStatus
        - accountType
        - confirmationStatus
        - isBusiness
        - isPreferred
        - maskedAccountNumber
        - routingTransitNumber
        - unmaskedAccountNumberUri
      type: object
      properties:
        accountType:
          $ref: '#/components/schemas/AccountType'
        maskedAccountNumber:
          type: string
        nickname:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$, %*-]{1,30}$'
          type: string
          nullable: true
        balanceUri:
          type: string
          format: uri
          nullable: true
        isPreferred:
          type: boolean
        unmaskedAccountNumberUri:
          type: string
          format: uri
        routingTransitNumber:
          pattern: '^[0-9]{9}$'
          type: string
        isBusiness:
          type: boolean
        businessName:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        primaryAccountOwner:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        secondaryAccountOwner:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        confirmationStatus:
          $ref: '#/components/schemas/ConfirmationStatusCode'
        accountStatus:
          $ref: '#/components/schemas/AccountStatusCode'
        checkPrintAddress:
          $ref: '#/components/schemas/USAddress'
        checkPrintAddressInternational:
          $ref: '#/components/schemas/InternationalAddress'
        bankingOptions:
          $ref: '#/components/schemas/BankingOptions'
      additionalProperties: false
    AccountToken:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/BankAccount'
      additionalProperties: false
    PayeeAccountToken:
      required:
        - accountToken
        - id
        - self
      type: object
      properties:
        accountToken:
          $ref: '#/components/schemas/AccountToken'
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    EbillServiceActivationType:
      enum:
        - Full
        - Lite
        - None
      type: string
    PayeeStatus:
      enum:
        - Active
        - Inactive
      type: string
    PayeeSource:
      enum:
        - CreditBureau
        - BillServiceProvider
      type: string
    PayeeAdditionalInfo:
      required:
        - cutOffTime
        - earliestTransactionDate
        - leadDays
        - nextTransactionDate
      type: object
      properties:
        earliestTransactionDate:
          type: string
          format: date-time
        cutOffTime:
          type: string
          format: date-time
        nextTransactionDate:
          type: string
          format: date-time
        leadDays:
          type: integer
          format: int32
        maxElectronicTransactionAmount:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    Payee:
      required:
        - id
        - modifiableFields
        - name
        - self
        - status
      type: object
      properties:
        name:
          type: string
        nickname:
          type: string
          nullable: true
        maskedAccountNumber:
          type: string
          nullable: true
        unmaskedAccountNumberUri:
          type: string
          format: uri
          nullable: true
        category:
          type: string
          nullable: true
        contactPhoneNumber:
          type: string
          nullable: true
        merchantUri:
          type: string
          format: uri
          nullable: true
        automaticTransactionUris:
          type: array
          items:
            type: string
            format: uri
          nullable: true
        reminderModelUri:
          type: string
          format: uri
          nullable: true
        address:
          $ref: '#/components/schemas/USAddress'
        overnightAddress:
          $ref: '#/components/schemas/USAddress'
        lastUsedFundingAccountUri:
          type: string
          format: uri
          nullable: true
        socialTokens:
          type: array
          items:
            $ref: '#/components/schemas/PayeeSocialToken'
          nullable: true
        accountTokens:
          type: array
          items:
            $ref: '#/components/schemas/PayeeAccountToken'
          nullable: true
        ebillServiceActivationUri:
          type: string
          format: uri
          nullable: true
        ebillServiceActivationType:
          $ref: '#/components/schemas/EbillServiceActivationType'
        ebillServiceUri:
          type: string
          format: uri
          nullable: true
        loginCredentialsUri:
          type: string
          format: uri
          nullable: true
        reversibilityLimit:
          type: number
          format: double
          nullable: true
        payeeLogoUrl:
          type: string
          format: uri
          nullable: true
        payeeLogoGeneric:
          type: boolean
        modifiableFields:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/PayeeStatus'
        source:
          $ref: '#/components/schemas/PayeeSource'
        cardFundingEligible:
          type: boolean
          nullable: true
        earliestStandardTransactionDate:
          type: string
          nullable: true
        legacyPayeeId:
          type: string
          nullable: true
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    PayeeList:
      type: object
      properties:
        payees:
          type: array
          items:
            $ref: '#/components/schemas/Payee'
          nullable: true
      additionalProperties: false
    PayeeListIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PayeeList'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BankAccountAddInfo:
      required:
        - accountNumber
        - accountType
        - routingTransitNumber
      type: object
      properties:
        routingTransitNumber:
          maxLength: 9
          pattern: '^[0-9]*'
          type: string
        accountType:
          $ref: '#/components/schemas/AccountType'
        accountNumber:
          maxLength: 22
          pattern: '^[a-zA-Z0-9]{1,22}$'
          type: string
      additionalProperties: false
    AccountTokenAddInfo:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/BankAccountAddInfo'
      additionalProperties: false
    PayeeInfo:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 32
          minLength: 2
          type: string
        nickname:
          maxLength: 30
          minLength: 1
          type: string
          nullable: true
        accountNumber:
          maxLength: 32
          minLength: 1
          pattern: '^[a-zA-Z0-9 !"#$%&-]{1,32}$'
          type: string
          nullable: true
        contactPhoneNumber:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/USAddress'
        overnightAddress:
          $ref: '#/components/schemas/USAddress'
        socialTokens:
          type: array
          items:
            $ref: '#/components/schemas/SocialToken'
          nullable: true
        accountTokens:
          type: array
          items:
            $ref: '#/components/schemas/AccountTokenAddInfo'
          nullable: true
      additionalProperties: false
    PayeeAddInput:
      required:
        - payeeInfo
      type: object
      properties:
        payeeInfo:
          $ref: '#/components/schemas/PayeeInfo'
        sourceUri:
          type: string
          format: uri
          nullable: true
        sourceUriPayeeZipcode:
          pattern: '^(\d{5}|\d{9}|\d{11})$'
          type: string
          nullable: true
      additionalProperties: false
    PayeeIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Payee'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    PatchPayeeInfo:
      type: object
      properties:
        name:
          maxLength: 32
          minLength: 2
          type: string
          nullable: true
        nickname:
          maxLength: 30
          type: string
          nullable: true
        accountNumber:
          maxLength: 32
          minLength: 1
          pattern: '^[a-zA-Z0-9 !"#$%&-]{1,32}$'
          type: string
          nullable: true
        contactPhoneNumber:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/USAddress'
        overnightAddress:
          $ref: '#/components/schemas/USAddress'
        socialTokens:
          type: array
          items:
            $ref: '#/components/schemas/SocialToken'
          nullable: true
        accountTokens:
          type: array
          items:
            $ref: '#/components/schemas/AccountTokenAddInfo'
          nullable: true
      additionalProperties: false
    PaperSuppressionType:
      enum:
        - DualDelivery
        - PaperSuppression
        - Trial
      type: string
    PaperSuppressionOption:
      required:
        - option
      type: object
      properties:
        option:
          $ref: '#/components/schemas/PaperSuppressionType'
        termsText:
          type: string
          nullable: true
        termsUrl:
          type: string
          format: uri
          nullable: true
        isEmbedded:
          type: boolean
      additionalProperties: false
    PreAuthToken:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        regularExpression:
          type: string
          nullable: true
      additionalProperties: false
    EbillCapability:
      required:
        - accountNumberEditable
        - id
        - self
        - serviceAddressRequired
      type: object
      properties:
        billerName:
          type: string
          nullable: true
        billerLogoUrl:
          type: string
          format: uri
          nullable: true
        billerSiteUrl:
          type: string
          format: uri
          nullable: true
        billerThumbnailImageUrl:
          type: string
          format: uri
          nullable: true
        paperSuppressionOptions:
          type: array
          items:
            $ref: '#/components/schemas/PaperSuppressionOption'
          nullable: true
        preAuthTokens:
          type: array
          items:
            $ref: '#/components/schemas/PreAuthToken'
          nullable: true
        restrictionText:
          type: string
          nullable: true
        serviceAddressRequired:
          type: boolean
        serviceAddress:
          $ref: '#/components/schemas/USAddress'
        trialPeriodDays:
          type: integer
          format: int32
        accountNumberEditable:
          type: boolean
        accountNumberHelpText:
          type: string
          nullable: true
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    EbillCapabilityIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EbillCapability'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    IndividualName:
      required:
        - first
        - last
      type: object
      properties:
        first:
          maxLength: 32
          pattern: '^[a-zA-Z][a-zA-Z0-9_(){}&@!+#.$,%*-]*'
          type: string
        last:
          maxLength: 32
          pattern: '^[a-zA-Z][a-zA-Z0-9_(){}&@!+#. $,%*-]*'
          type: string
        middle:
          maxLength: 32
          pattern: '^[a-zA-Z][a-zA-Z0-9_(){}&@!+#.$,%*-]*'
          type: string
          nullable: true
        nickname:
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$, %*-]{1,30}$'
          type: string
          nullable: true
        prefix:
          maxLength: 6
          pattern: '^[a-zA-Z][a-zA-Z0-9_(){}&@!+#.$,%*-]*'
          type: string
          nullable: true
      additionalProperties: false
    PreAuthTokenInput:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      additionalProperties: false
    EbillServiceActivateInput:
      required:
        - acceptedTC
        - paperSuppressionOption
      type: object
      properties:
        acceptedTC:
          type: boolean
        businessName:
          type: string
          nullable: true
        accountNumber:
          pattern: '^[a-zA-Z0-9]{1,32}$'
          type: string
          nullable: true
        emailAddressShare:
          type: boolean
        name:
          $ref: '#/components/schemas/IndividualName'
        paperSuppressionOption:
          $ref: '#/components/schemas/PaperSuppressionType'
        preAuthTokens:
          type: array
          items:
            $ref: '#/components/schemas/PreAuthTokenInput'
          nullable: true
        serviceAddress:
          $ref: '#/components/schemas/USAddress'
      additionalProperties: false
    EbillActivationStateType:
      enum:
        - Pending
        - Accepted
        - Rejected
        - NotApplicable
      type: string
    EbillServiceActivateOutput:
      required:
        - id
        - self
      type: object
      properties:
        trialPeriodDays:
          type: integer
          format: int32
          nullable: true
        activationState:
          $ref: '#/components/schemas/EbillActivationStateType'
        activationStateMessage:
          type: string
          nullable: true
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    EbillServiceActivateOutputIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EbillServiceActivateOutput'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    EbillAutoActivationType:
      enum:
        - EZActivation
        - BillerMerge
        - RegularBillerRules
      type: string
    EbillActivationType:
      enum:
        - AutoActivation
        - User
      type: string
    PaperProcessingStatusType:
      enum:
        - Unknown
        - PaperBillsStillSent
        - NoPaperBillsSent
        - EbillDeactivationAfterTrialPeriod
        - PaperBillsStopAfterTrialPeriod
      type: string
    ServiceHolderType:
      enum:
        - Business
        - Consumer
      type: string
    EbillAccountStatusType:
      enum:
        - Pending
        - Active
        - Inactive
        - Rejected
      type: string
    EbillAccountDetail:
      required:
        - activationType
        - autoActivationType
        - id
        - paperProcessingStatus
        - self
        - serviceHolderType
        - status
        - transactionScheduleTypesSupported
      type: object
      properties:
        autoActivationType:
          $ref: '#/components/schemas/EbillAutoActivationType'
        activationType:
          $ref: '#/components/schemas/EbillActivationType'
        billerThumbnailImageUrl:
          type: string
          format: uri
          nullable: true
        billTransactionScheduleEligible:
          type: boolean
        emailAddressShare:
          type: boolean
        firstEbillReceived:
          type: boolean
        name:
          $ref: '#/components/schemas/IndividualName'
        isTrialPeriod:
          type: boolean
        paperProcessingStatus:
          $ref: '#/components/schemas/PaperProcessingStatusType'
        paperSuppressionIncentiveMessage:
          type: string
          nullable: true
        paperSuppressionTermsUrl:
          type: string
          format: uri
          nullable: true
        promptPaperSuppression:
          type: boolean
        serviceAddress:
          $ref: '#/components/schemas/USAddress'
        serviceBusinessName:
          type: string
          nullable: true
        serviceDaytimePhoneNumber:
          type: string
          nullable: true
        serviceEveningPhoneNumber:
          type: string
          nullable: true
        serviceHolderType:
          $ref: '#/components/schemas/ServiceHolderType'
        status:
          $ref: '#/components/schemas/EbillAccountStatusType'
        trialPeriodEnd:
          type: string
          nullable: true
        trialPeriodStart:
          type: string
          nullable: true
        transactionScheduleTypesSupported:
          type: array
          items:
            $ref: '#/components/schemas/TransactionAmountType'
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    EbillAccountDetailIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EbillAccountDetail'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    EbillServiceSuppressPaperInput:
      required:
        - acceptedTC
      type: object
      properties:
        acceptedTC:
          type: boolean
      additionalProperties: false
    EligibleFundingAccount:
      required:
        - fundingAccountUri
        - maxAmount
        - minAmount
      type: object
      properties:
        fundingAccountUri:
          type: string
          format: uri
        maxAmount:
          type: number
          format: double
        minAmount:
          type: number
          format: double
      additionalProperties: false
    BillTransactionScheduleTypesSupported:
      required:
        - eligibleFundingAccounts
        - transactionInitiationTypes
        - transactionTypes
      type: object
      properties:
        transactionTypes:
          type: array
          items:
            $ref: '#/components/schemas/TransactionAmountType'
        transactionInitiationTypes:
          type: array
          items:
            $ref: '#/components/schemas/TransactionInitiationType'
        eligibleFundingAccounts:
          type: array
          items:
            $ref: '#/components/schemas/EligibleFundingAccount'
      additionalProperties: false
    RecurringEligibleFundingAccount:
      required:
        - earliestInitiationDate
        - fundingAccountUri
        - maxAmount
        - minAmount
      type: object
      properties:
        earliestInitiationDate:
          type: string
        fundingAccountUri:
          type: string
          format: uri
        maxAmount:
          type: number
          format: double
        minAmount:
          type: number
          format: double
      additionalProperties: false
    RecurringTransactionScheduleTypesSupported:
      required:
        - duration
        - eligibleFundingAccounts
        - frequency
      type: object
      properties:
        frequency:
          type: array
          items:
            $ref: '#/components/schemas/TransactionFrequency'
        duration:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDuration'
        eligibleFundingAccounts:
          type: array
          items:
            $ref: '#/components/schemas/RecurringEligibleFundingAccount'
      additionalProperties: false
    AutomaticTransactionOptions:
      required:
        - billTransactionScheduleActive
        - billTransactionScheduleCapable
        - recurringTransactionScheduleActive
        - recurringTransactionScheduleCapable
      type: object
      properties:
        billTransactionScheduleActive:
          type: boolean
        billTransactionScheduleCapable:
          type: boolean
        billTransactionScheduleTypesSupported:
          $ref: '#/components/schemas/BillTransactionScheduleTypesSupported'
        recurringTransactionScheduleActive:
          type: boolean
        recurringTransactionScheduleCapable:
          type: boolean
        recurringTransactionScheduleTypesSupported:
          $ref: '#/components/schemas/RecurringTransactionScheduleTypesSupported'
      additionalProperties: false
    AutomaticTransactionOptionsIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AutomaticTransactionOptions'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    MerchantData:
      type: object
      properties:
        merchantName:
          type: string
          nullable: true
        merchantLogoUrl:
          type: string
          format: uri
          nullable: true
        merchantUri:
          type: string
          format: uri
          nullable: true
        legacyMerchantId:
          type: string
          nullable: true
      additionalProperties: false
    VerificationTokenType:
      enum:
        - String
        - Number
        - Currency
      type: string
    VerificationToken:
      required:
        - description
        - type
      type: object
      properties:
        description:
          maxLength: 1000
          pattern: '[a-zA-Z0-9_()\r|\n{}@!+#.$,%^ *-]{1,1000}$'
          type: string
        value:
          maxLength: 1000
          pattern: '[a-zA-Z0-9_()\r|\n{}@!+#.$,%^ *-]{1,1000}$'
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/VerificationTokenType'
      additionalProperties: false
    PotentialPayee:
      required:
        - additionalInfoRequired
        - id
        - merchantData
        - self
      type: object
      properties:
        maskedAccountNumber:
          type: string
          nullable: true
        unmaskedAccountNumberUri:
          type: string
          format: uri
          nullable: true
        additionalInfoRequired:
          type: boolean
        merchantData:
          $ref: '#/components/schemas/MerchantData'
        verificationTokens:
          type: array
          items:
            $ref: '#/components/schemas/VerificationToken'
          nullable: true
        verificationUri:
          type: string
          format: uri
          nullable: true
        dormantAccount:
          type: boolean
          nullable: true
        legacyPayeeId:
          type: string
          nullable: true
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    PotentialPayeeList:
      type: object
      properties:
        potentialPayees:
          type: array
          items:
            $ref: '#/components/schemas/PotentialPayee'
          nullable: true
      additionalProperties: false
    PotentialPayeeListIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PotentialPayeeList'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    PotentialPayeeIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PotentialPayee'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    VerificationTokenList:
      type: object
      properties:
        verificationTokens:
          type: array
          items:
            $ref: '#/components/schemas/VerificationToken'
          nullable: true
      additionalProperties: false
    VerificationResponse:
      required:
        - additionalInfoRequired
        - id
        - merchantData
        - self
      type: object
      properties:
        payeeUri:
          type: string
          format: uri
          nullable: true
        maskedAccountNumber:
          type: string
          nullable: true
        unmaskedAccountNumberUri:
          type: string
          format: uri
          nullable: true
        additionalInfoRequired:
          type: boolean
        merchantData:
          $ref: '#/components/schemas/MerchantData'
        verificationTokens:
          type: array
          items:
            $ref: '#/components/schemas/VerificationToken'
          nullable: true
        verificationUri:
          type: string
          format: uri
          nullable: true
        dormantAccount:
          type: boolean
          nullable: true
        legacyPayeeId:
          type: string
          nullable: true
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    VerificationResponseIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VerificationResponse'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BillDiscoveryUserEligibility:
      type: object
      properties:
        creditReportEligible:
          type: boolean
        billServiceProviderEligible:
          type: boolean
        outstandingPotentialPayeesCount:
          type: integer
          format: int32
      additionalProperties: false
    BillDiscoveryUserEligibilityIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BillDiscoveryUserEligibility'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    ToDoType:
      enum:
        - UnpaidBill
        - PotentialPayee
        - UnverifiedAccount
      type: string
    ToDo:
      required:
        - description
        - id
        - self
        - toDoDetailUri
        - toDoType
        - verificationRequired
      type: object
      properties:
        toDoType:
          $ref: '#/components/schemas/ToDoType'
        toDoDetailUri:
          type: string
          format: uri
        payeeUri:
          type: string
          format: uri
          nullable: true
        verificationRequired:
          type: boolean
        actionDate:
          type: string
          nullable: true
        amount:
          type: number
          format: double
          nullable: true
        maskedAccountNumber:
          type: string
          nullable: true
        description:
          type: string
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    ToDoIEnumerableIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ToDo'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    ToDoIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ToDo'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    AdditionalInfoRequired:
      enum:
        - OvernightAddress
      type: string
    DeliveryMethod:
      enum:
        - Electronic
        - Paper
        - Overnight
      type: string
    TransactionOptions:
      required:
        - deliveryMethod
        - fee
        - fundingAccountUri
        - instantDelivery
        - isPreferredDate
        - maxAmount
        - minAmount
        - withdrawNow
      type: object
      properties:
        debitDate:
          type: string
          nullable: true
        additionalInfoRequired:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfoRequired'
          nullable: true
        cutOffTime:
          type: string
          format: date-time
          nullable: true
        deliveryMethod:
          $ref: '#/components/schemas/DeliveryMethod'
        fee:
          type: number
          format: double
        fundingAccountUri:
          type: string
          format: uri
        withdrawNow:
          type: boolean
        instantDelivery:
          type: boolean
        isPreferredDate:
          type: boolean
        maxAmount:
          type: number
          format: double
        minAmount:
          type: number
          format: double
        authorizationRequired:
          type: boolean
          nullable: true
      additionalProperties: false
    TransactionCalendar:
      type: object
      properties:
        deliveryDate:
          type: string
          nullable: true
        transactionDestinationUri:
          type: string
          format: uri
          nullable: true
        transactionOptions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionOptions'
          nullable: true
      additionalProperties: false
    TransactionCalendarListIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TransactionCalendar'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    Transaction:
      required:
        - amount
        - deliveryDate
        - destinationUri
        - fundingAccountUri
        - listItemId
        - withdrawNow
      type: object
      properties:
        listItemId:
          type: integer
          format: int32
        amount:
          type: number
          format: double
        deliveryDate:
          type: string
        fundingAccountUri:
          type: string
          format: uri
        note:
          maxLength: 255
          pattern: '^[\x2A-\x2E\x30-\x39\x40-\x5A\x5F\x5E\x61-\x7A\x20\x21\x23-\x25]+$'
          type: string
          nullable: true
        destinationUri:
          type: string
          format: uri
        withdrawNow:
          type: boolean
        memo:
          maxLength: 34
          type: string
          nullable: true
        transactionAuthorized:
          type: boolean
          nullable: true
      additionalProperties: false
    TransactionOutput:
      required:
        - id
        - self
      type: object
      properties:
        confirmationNumber:
          type: string
          nullable: true
        deliveryDate:
          type: string
          nullable: true
        nextAvailableTransactionDate:
          type: string
          nullable: true
        legacyTransactionId:
          type: string
          nullable: true
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    TransactionOutputIpsListItemResponse:
      type: object
      properties:
        listItemId:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/TransactionOutput'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    TransactionOutputIpsListItemResponseListIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TransactionOutputIpsListItemResponse'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BaseModelIpsListItemResponse:
      type: object
      properties:
        listItemId:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/BaseModel'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    BaseModelIpsListItemResponseListIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BaseModelIpsListItemResponse'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    DeliveryMethodType:
      enum:
        - Electronic
        - Paper
      type: string
    TransactionStatus:
      enum:
        - Pending
        - PendingMfa
        - PendingOtp
        - Complete
        - Failed
        - Canceled
        - InProcess
      type: string
    TransactionType:
      enum:
        - Standard
        - Overnight
        - Expedited
      type: string
    TransactionOutputDetail:
      required:
        - legacyTransactionId
      type: object
      properties:
        amount:
          type: number
          format: double
        automaticTransactionUri:
          type: string
          format: uri
          nullable: true
        billItemUri:
          type: string
          format: uri
          nullable: true
        debitDate:
          type: string
          nullable: true
        fee:
          type: number
          format: double
          nullable: true
        fundingAccountUri:
          type: string
          format: uri
          nullable: true
        note:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
        modifiableFields:
          type: array
          items:
            type: string
          nullable: true
        payeeUri:
          type: string
          format: uri
          nullable: true
        legacyTransactionId:
          type: string
        self:
          type: string
          format: uri
          nullable: true
        id:
          type: string
          nullable: true
        confirmationNumber:
          type: string
          nullable: true
        deliveryMethod:
          $ref: '#/components/schemas/DeliveryMethodType'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        statusUri:
          type: string
          format: uri
          nullable: true
        deliveryDate:
          type: string
          nullable: true
        cancelUri:
          type: string
          format: uri
          nullable: true
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        deliveryTrackingNumber:
          type: string
          nullable: true
      additionalProperties: false
    TransactionList:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionOutputDetail'
          nullable: true
      additionalProperties: false
    TransactionListIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TransactionList'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    VisaTransaction:
      required:
        - amount
        - deliveryDate
        - destinationUri
        - fundingAccountUri
        - listItemId
      type: object
      properties:
        listItemId:
          type: integer
          format: int32
        amount:
          maximum: 10000000000000000
          minimum: 0
          type: number
          format: double
        deliveryDate:
          type: string
        fundingAccountUri:
          type: string
          format: uri
        note:
          maxLength: 255
          pattern: '^[\x2A-\x2E\x30-\x39\x40-\x5A\x5F\x5E\x61-\x7A\x20\x21\x23-\x25]+$'
          type: string
          nullable: true
        destinationUri:
          type: string
          format: uri
        memo:
          maxLength: 34
          type: string
          nullable: true
      additionalProperties: false
    VisaTransactionOutput:
      required:
        - id
        - self
      type: object
      properties:
        confirmationNumber:
          type: string
          nullable: true
        deliveryDate:
          type: string
          nullable: true
        totalTransactionAmount:
          type: number
          format: double
        feeAmount:
          type: number
          format: double
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    VisaTransactionOutputIpsListItemResponse:
      type: object
      properties:
        listItemId:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/VisaTransactionOutput'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    VisaTransactionOutputIpsListItemResponseListIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VisaTransactionOutputIpsListItemResponse'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    TransactionModify:
      type: object
      properties:
        amount:
          type: number
          format: double
          nullable: true
        deliveryDate:
          type: string
          nullable: true
        fundingAccountUri:
          type: string
          format: uri
          nullable: true
        memo:
          maxLength: 34
          type: string
          nullable: true
        note:
          maxLength: 255
          pattern: '^[\x2A-\x2E\x30-\x39\x40-\x5A\x5F\x5E\x61-\x7A\x20\x21\x23-\x25]+$'
          type: string
          nullable: true
        withdrawNow:
          type: boolean
          nullable: true
        transactionAuthorized:
          type: boolean
          nullable: true
      additionalProperties: false
    TransactionModifyOutput:
      type: object
      properties:
        nextAvailableTransactionDate:
          type: string
          nullable: true
        legacyTransactionId:
          type: string
          nullable: true
        self:
          type: string
          format: uri
          nullable: true
        id:
          type: string
          nullable: true
        confirmationNumber:
          type: string
          nullable: true
        deliveryMethod:
          $ref: '#/components/schemas/DeliveryMethodType'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        statusUri:
          type: string
          format: uri
          nullable: true
        deliveryDate:
          type: string
          nullable: true
        cancelUri:
          type: string
          format: uri
          nullable: true
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        deliveryTrackingNumber:
          type: string
          nullable: true
      additionalProperties: false
    TransactionModifyOutputIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TransactionModifyOutput'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    Name:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        nickname:
          type: string
          nullable: true
        prefix:
          type: string
          nullable: true
      additionalProperties: false
    EndpointStatus:
      enum:
        - Unspecified
        - Active
        - Inactive
        - Suspended
        - NotFound
        - Invalid
        - Onhold
      type: string
    EndPointType:
      enum:
        - Phone
        - Email
        - Address
      type: string
    AddressType:
      enum:
        - USAddress
        - InternationalAddress
      type: string
    Address:
      required:
        - addressType
      type: object
      properties:
        addressType:
          $ref: '#/components/schemas/AddressType'
        usAddress:
          $ref: '#/components/schemas/USAddress'
        internationalAddress:
          $ref: '#/components/schemas/InternationalAddress'
      additionalProperties: false
    PhoneType:
      enum:
        - Mobile
        - Day
        - Evening
      type: string
    Phone:
      required:
        - phoneType
        - value
      type: object
      properties:
        phoneType:
          $ref: '#/components/schemas/PhoneType'
        value:
          pattern: '(^[0-9]{10}$)|(^\(?[0-9]{3}\)?-[0-9]{3}-[0-9]{4}$)|(^\(?[0-9]{3}\)?\s?[0-9]{3}-[0-9]{4}$)'
          type: string
      additionalProperties: false
    Email:
      required:
        - value
      type: object
      properties:
        value:
          pattern: '^([_+A-Za-z0-9]+((\.|\-)[_+A-Za-z0-9]+)*@[A-Za-z0-9]+((\.|\-)[A-Za-z0-9]+)*(\.[A-Za-z]{2,8}))$'
          type: string
      additionalProperties: false
    ContactEndpoint:
      required:
        - endPointType
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EndpointStatus'
        endPointType:
          $ref: '#/components/schemas/EndPointType'
        address:
          $ref: '#/components/schemas/Address'
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          $ref: '#/components/schemas/Email'
        defaultEndpoint:
          type: boolean
          nullable: true
      additionalProperties: false
    UserStatus:
      enum:
        - Active
        - Inactive
        - FrozenFraud
        - FrozenOther
        - CancelledFraud
        - CancelledOther
        - VerificationNeeded
        - Unspecified
      type: string
    User:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        name:
          $ref: '#/components/schemas/Name'
        businessName:
          type: string
          nullable: true
        contactEndPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactEndpoint'
          nullable: true
        category:
          type: string
          nullable: true
        sensitiveInformationUri:
          type: string
          format: uri
          nullable: true
        timeZone:
          type: integer
          format: int32
          nullable: true
        country:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/UserStatus'
        lastLoginDate:
          type: string
          format: date-time
          nullable: true
        languageCode:
          type: string
          nullable: true
        languageCountry:
          type: string
          nullable: true
        locale:
          type: string
          nullable: true
        newUser:
          type: boolean
        occupation:
          type: string
          nullable: true
        modifiableFields:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UserIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    IdType:
      enum:
        - StateIssuedDriverLicense
        - StateIssuedIdCard
        - Passport
        - MilitaryIdCard
      type: string
    IdentityValidationInformation:
      required:
        - idIssuingCountry
        - idNumber
        - idType
      type: object
      properties:
        idType:
          $ref: '#/components/schemas/IdType'
        idNumber:
          maxLength: 30
          minLength: 6
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        idIssuingState:
          pattern: '^[A-Z]*'
          type: string
          nullable: true
        idIssuingCountry:
          maxLength: 3
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
      additionalProperties: false
    ManagedUserPatchRequest:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        contactEndPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactEndpoint'
          nullable: true
        birthDate:
          type: string
          nullable: true
        category:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        identityValidationInformation:
          $ref: '#/components/schemas/IdentityValidationInformation'
        locale:
          pattern: '[A-Za-z]{2}-[A-Za-z]{2}$'
          type: string
          nullable: true
        occupation:
          maxLength: 50
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        taxId:
          maxLength: 9
          minLength: 0
          pattern: '^(?!111111111|222222222|333333333|444444444|555555555|777777777|888888888|123456789|012345678)(?!666|000|9\d{2})\d{3}(?!00)\d{2}(?!0{4})\d{4}$'
          type: string
          nullable: true
        timeZone:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    UserV2:
      type: object
      properties:
        billingClass:
          type: string
          nullable: true
        consumerTier:
          type: string
          nullable: true
        isAllowedToSolicit:
          type: boolean
        isEmployee:
          type: boolean
        sponsorBillingCategory:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        name:
          $ref: '#/components/schemas/Name'
        businessName:
          type: string
          nullable: true
        contactEndPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactEndpoint'
          nullable: true
        category:
          type: string
          nullable: true
        sensitiveInformationUri:
          type: string
          format: uri
          nullable: true
        timeZone:
          type: integer
          format: int32
          nullable: true
        country:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/UserStatus'
        lastLoginDate:
          type: string
          format: date-time
          nullable: true
        languageCode:
          type: string
          nullable: true
        languageCountry:
          type: string
          nullable: true
        locale:
          type: string
          nullable: true
        newUser:
          type: boolean
        occupation:
          type: string
          nullable: true
        modifiableFields:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UserV2IpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserV2'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    SensitiveInformation:
      type: object
      properties:
        birthDate:
          type: string
          nullable: true
        taxId:
          type: string
          nullable: true
        driversLicenseNumber:
          type: string
          nullable: true
        driversLicenseState:
          type: string
          nullable: true
      additionalProperties: false
    SensitiveInformationIEnumerableIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SensitiveInformation'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    ConsentType:
      enum:
        - BillDiscovery
        - CreditBureau
      type: string
    Consent:
      required:
        - consentGiven
        - consentText
        - consentType
      type: object
      properties:
        consentText:
          minLength: 1
          type: string
        consentType:
          $ref: '#/components/schemas/ConsentType'
        consentGiven:
          type: boolean
      additionalProperties: false
    ConsentList:
      type: object
      properties:
        consents:
          type: array
          items:
            $ref: '#/components/schemas/Consent'
          nullable: true
      additionalProperties: false
    ConsentOutput:
      type: object
      properties:
        billDiscoveryUserConsent:
          type: boolean
        creditBureauUserConsent:
          type: boolean
      additionalProperties: false
    ConsentOutputIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConsentOutput'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    CardFundingOptions:
      type: object
      properties:
        sponsorFirstPartyDebit:
          type: boolean
        sponsorFirstPartyCredit:
          type: boolean
        subscriberFirstPartyDebit:
          type: boolean
        subscriberFirstPartyCredit:
          type: boolean
        subscriberThirdPartyDebit:
          type: boolean
      additionalProperties: false
    Features:
      type: object
      properties:
        supportsBillDiscovery:
          type: boolean
        supportsCardFundedBillPay:
          type: boolean
        billDiscoveryProviderType:
          type: array
          items:
            type: string
          nullable: true
        transactionHistoryMonths:
          type: integer
          format: int32
          nullable: true
        lddEnabled:
          type: boolean
        cardFundingOptions:
          $ref: '#/components/schemas/CardFundingOptions'
        supportsClassicView:
          type: boolean
      additionalProperties: false
    FeaturesIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Features'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    ManagedUser:
      required:
        - birthDate
        - fiservBillpayExternalSubscriberId
        - fiservBillpaySubscriberId
        - name
        - taxId
      type: object
      properties:
        fiservBillpaySubscriberId:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        fiservBillpayExternalSubscriberId:
          maxLength: 48
          minLength: 2
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        name:
          $ref: '#/components/schemas/Name'
        contactEndPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactEndpoint'
          nullable: true
        identityValidationInformation:
          $ref: '#/components/schemas/IdentityValidationInformation'
        birthDate:
          type: string
        category:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        taxId:
          maxLength: 9
          minLength: 0
          pattern: '^(?!111111111|222222222|333333333|444444444|555555555|777777777|888888888|123456789|012345678)(?!666|000|9\d{2})\d{3}(?!00)\d{2}(?!0{4})\d{4}$'
          type: string
        locale:
          pattern: '[A-Za-z]{2}-[A-Za-z]{2}$'
          type: string
          nullable: true
        occupation:
          maxLength: 50
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        userTimeZone:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    SecurityQuestion:
      enum:
        - SbsrWillBePromptedUponNextAuth
        - YourHighSchoolName
        - YourMothersMaidenName
        - YourFathersMiddleName
        - YourCityOfBirth
      type: string
    ManagedUserV2:
      required:
        - birthDate
        - fiservBillpayExternalSubscriberId
        - fiservBillpaySubscriberId
        - name
        - taxId
      type: object
      properties:
        billingClass:
          maxLength: 9
          minLength: 1
          pattern: '^[a-zA-Z0-9]+$'
          type: string
          nullable: true
        businessName:
          maxLength: 40
          type: string
          nullable: true
        consumerTier:
          pattern: '(1|2|3){1}$'
          type: string
          nullable: true
        isAllowedToSolicit:
          type: boolean
          nullable: true
        isEmployee:
          type: boolean
          nullable: true
        sponsorBillingCategory:
          maxLength: 2
          pattern: '^[a-zA-Z0-9]+$'
          type: string
          nullable: true
        securityQuestion:
          $ref: '#/components/schemas/SecurityQuestion'
        securityAnswer:
          maxLength: 32
          minLength: 4
          type: string
          nullable: true
        password:
          maxLength: 8
          minLength: 8
          pattern: '((?=.*[@#$&*])(?=.*[a-zA-Z\d])|(?=.*\d)(?=.*[a-zA-Z])(?=.*[a-zA-Z0-9@#$&*])|(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z0-9@#$&*]))[a-zA-Z0-9@#$&*]+'
          type: string
          nullable: true
        fiservBillpaySubscriberId:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        fiservBillpayExternalSubscriberId:
          maxLength: 48
          minLength: 2
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
        name:
          $ref: '#/components/schemas/Name'
        contactEndPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactEndpoint'
          nullable: true
        identityValidationInformation:
          $ref: '#/components/schemas/IdentityValidationInformation'
        birthDate:
          type: string
        category:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        taxId:
          maxLength: 9
          minLength: 0
          pattern: '^(?!111111111|222222222|333333333|444444444|555555555|777777777|888888888|123456789|012345678)(?!666|000|9\d{2})\d{3}(?!00)\d{2}(?!0{4})\d{4}$'
          type: string
        locale:
          pattern: '[A-Za-z]{2}-[A-Za-z]{2}$'
          type: string
          nullable: true
        occupation:
          maxLength: 50
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        userTimeZone:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PreferencesPatchRequest:
      type: object
      properties:
        preferenceValue:
          type: string
          nullable: true
      additionalProperties: false
    Preference:
      required:
        - id
        - self
      type: object
      properties:
        preferenceName:
          type: string
          nullable: true
        preferenceValue:
          type: string
          nullable: true
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    PreferenceList:
      type: object
      properties:
        preferences:
          type: array
          items:
            $ref: '#/components/schemas/Preference'
          nullable: true
      additionalProperties: false
    PreferenceListIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PreferenceList'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    PreferencesPostRequest:
      required:
        - listItemId
        - preferenceName
        - preferenceValue
      type: object
      properties:
        preferenceName:
          type: string
        preferenceValue:
          type: string
        listItemId:
          type: integer
          format: int32
      additionalProperties: false
    PreferencesPostRequestList:
      type: object
      properties:
        preferences:
          type: array
          items:
            $ref: '#/components/schemas/PreferencesPostRequest'
          nullable: true
      additionalProperties: false
    PreferencesPostResponse:
      type: object
      properties:
        preferences:
          type: array
          items:
            $ref: '#/components/schemas/BaseModelIpsListItemResponse'
          nullable: true
      additionalProperties: false
    PreferencesPostResponseIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PreferencesPostResponse'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    ManagedUserPatchRequestV2:
      type: object
      properties:
        password:
          maxLength: 8
          minLength: 8
          pattern: '((?=.*[@#$&*])(?=.*[a-zA-Z\d])|(?=.*\d)(?=.*[a-zA-Z])(?=.*[a-zA-Z0-9@#$&*])|(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z0-9@#$&*]))[a-zA-Z0-9@#$&*]+'
          type: string
          nullable: true
        billingClass:
          maxLength: 9
          minLength: 1
          pattern: '^[a-zA-Z0-9]+$'
          type: string
          nullable: true
        businessName:
          maxLength: 40
          type: string
          nullable: true
        consumerTier:
          pattern: '(1|2|3){1}$'
          type: string
          nullable: true
        isAllowedToSolicit:
          type: boolean
          nullable: true
        isEmployee:
          type: boolean
          nullable: true
        sponsorBillingCategory:
          maxLength: 2
          pattern: '^[a-zA-Z0-9]+$'
          type: string
          nullable: true
        name:
          $ref: '#/components/schemas/Name'
        contactEndPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactEndpoint'
          nullable: true
        birthDate:
          type: string
          nullable: true
        category:
          maxLength: 32
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        identityValidationInformation:
          $ref: '#/components/schemas/IdentityValidationInformation'
        locale:
          pattern: '[A-Za-z]{2}-[A-Za-z]{2}$'
          type: string
          nullable: true
        occupation:
          maxLength: 50
          pattern: '^[a-zA-Z0-9_(){}&@!+#.''$,%^ *-]*'
          type: string
          nullable: true
        taxId:
          maxLength: 9
          minLength: 0
          pattern: '^(?!111111111|222222222|333333333|444444444|555555555|777777777|888888888|123456789|012345678)(?!666|000|9\d{2})\d{3}(?!00)\d{2}(?!0{4})\d{4}$'
          type: string
          nullable: true
        timeZone:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    SensitiveInformationV2:
      type: object
      properties:
        securityQuestion:
          $ref: '#/components/schemas/SecurityQuestion'
        securityAnswer:
          type: string
          nullable: true
        birthDate:
          type: string
          nullable: true
        taxId:
          type: string
          nullable: true
        driversLicenseNumber:
          type: string
          nullable: true
        driversLicenseState:
          type: string
          nullable: true
      additionalProperties: false
    SensitiveInformationV2IEnumerableIpsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SensitiveInformationV2'
          nullable: true
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
    PayeeDetail:
      required:
        - id
        - self
      type: object
      properties:
        billerId:
          type: string
          nullable: true
        onlinePayeeName:
          type: string
          nullable: true
        merchantZipRequired:
          type: boolean
        self:
          type: string
          format: uri
        id:
          type: string
      additionalProperties: false
    MerchantDetail:
      type: object
      properties:
        displayPayeeName:
          type: string
          nullable: true
        logoUri:
          type: string
          format: uri
          nullable: true
        payeeList:
          type: array
          items:
            $ref: '#/components/schemas/PayeeDetail'
          nullable: true
      additionalProperties: false
    ProbablePayee:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        category:
          type: string
          nullable: true
        suggestedDisplayPriority:
          type: integer
          format: int32
        merchantList:
          type: array
          items:
            $ref: '#/components/schemas/MerchantDetail'
          nullable: true
      additionalProperties: false
    ProbableMerchants:
      type: object
      properties:
        probablePayeeList:
          type: array
          items:
            $ref: '#/components/schemas/ProbablePayee'
          nullable: true
      additionalProperties: false
    ProbableMerchantsIpsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProbableMerchants'
        result:
          $ref: '#/components/schemas/ResultType'
      additionalProperties: false
